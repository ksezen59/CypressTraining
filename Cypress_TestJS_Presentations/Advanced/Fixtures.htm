<!DOCTYPE html>
<!-- saved from url=(0080)https://gitpitch.com/cypress-io/testing-workshop-cypress?p=slides/14-fixtures#/1 -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport">
    <title>GitPitch Markdown</title>
    <meta name="description" content="Slide Decks for Tech Conferences, Training, Developer Advocates, and Educators">
    <meta name="keywords" content="Markdown, Presentation, Slides, Developer">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    
    <meta name="‚Äùrobots‚Äù" content="‚Äùnoindex,nofollow‚Äù">
    
    

<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:site" content="@gitpitch">
<meta name="twitter:title" content="GitPitch Markdown">
<meta name="twitter:description" content="The perfect slide deck solution for Tech Conferences, Training, Developer Advocates, and Educators.">
<meta name="twitter:image" content="https://gitpitch.com/assets/img/gitpitch-40-splash.png">


    

<meta property="og:site_name" content="GitPitch">
<meta property="og:type" content="article">
<meta property="og:title" content="GitPitch Markdown">
<meta property="og:description" content="The perfect slide deck solution for Tech Conferences, Training, Developer Advocates, and Educators.">
<meta property="og:image" content="https://gitpitch.com/assets/img/gitpitch-40-splash.png">
<meta property="og:url" content="https://gitpitch.com/cypress-io/testing-workshop-cypress/master?grs=github&amp;t=template&amp;p=slides%2F14-fixtures">


    

<link rel="alternate" type="application/json+oembed" href="https://gitpitch.com/pitchme/oembed?url=https%3A%2F%2Fgitpitch.com%2Fcypress-io%2Ftesting-workshop-cypress%2Fmaster%3Fgrs%3Dgithub%26t%3Dtemplate%26p%3Dslides%252F14-fixtures&amp;format=json" title="GitPitch - Markdown Presentations for Everyone on Git">
<link rel="alternate" type="text/xml+oembed" href="https://gitpitch.com/pitchme/oembed?url=https%3A%2F%2Fgitpitch.com%2Fcypress-io%2Ftesting-workshop-cypress%2Fmaster%3Fgrs%3Dgithub%26t%3Dtemplate%26p%3Dslides%252F14-fixtures&amp;format=xml" title="GitPitch - Markdown Presentations for Everyone on Git">


    
    
    <link rel="apple-touch-icon" sizes="120x120" href="https://gitpitch.com/assets/img/favicon/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="https://gitpitch.com/assets/img/favicon/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="https://gitpitch.com/assets/img/favicon/favicon-16x16.png">
    
    
    
<link href="./Fixtures_files/reveal.css" rel="stylesheet" type="text/css">

<link href="./Fixtures_files/moon.css" rel="stylesheet" type="text/css" id="theme">
<link href="./Fixtures_files/future.css" rel="stylesheet" type="text/css">


<link href="./Fixtures_files/title-footer-mod.css" rel="stylesheet" type="text/css" id="theme">

<link href="./Fixtures_files/paper.css" rel="stylesheet" type="text/css">


<link href="./Fixtures_files/atom-one-light.css" rel="stylesheet" type="text/css">
<link href="./Fixtures_files/octicons.css" rel="stylesheet" type="text/css">
<link href="./Fixtures_files/fa-all.min.css" rel="stylesheet" type="text/css">
<link href="./Fixtures_files/fa-v4-shims.min.css" rel="stylesheet" type="text/css">

<link href="./Fixtures_files/pitchcore.css" rel="stylesheet" type="text/css">




<link href="./Fixtures_files/pitch.css" rel="stylesheet" type="text/css">

<link href="./Fixtures_files/pitchmenu.css" rel="stylesheet" type="text/css">


<link href="./Fixtures_files/menu.css" rel="stylesheet" type="text/css">



<link href="./Fixtures_files/pitchbardark.css" rel="stylesheet" type="text/css">


<link href="./Fixtures_files/pitchcode.css" rel="stylesheet" type="text/css">



<link href="./Fixtures_files/css" rel="stylesheet">



    
    

<style>
.half-image img {
  width: 40%;
}

</style>


    <link href="./Fixtures_files/pitchpost.css" rel="stylesheet" type="text/css">
    

    
        
            

<script async="" src="./Fixtures_files/analytics.js"></script><script async="" src="./Fixtures_files/analytics.js"></script><script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  
  ga('create', 'UA-80973712-1', 'auto');
  ga('send', 'pageview');
  
</script>


        
        
            

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  
  ga('create', 'UA-59606812-9', 'auto', 'gpu');
  ga('gpu.send', 'pageview');
  
</script><script type="text/javascript" src="./Fixtures_files/marked.js"></script><script type="text/javascript" src="./Fixtures_files/markdown.js"></script><script type="text/javascript" src="./Fixtures_files/menu.js"></script><script type="text/javascript" src="./Fixtures_files/highlight.js"></script><script type="text/javascript" src="./Fixtures_files/reveal-code-focus-30.js"></script>


        
    


</head>
<body>
    


    <div class="reveal none center has-vertical-slides has-horizontal-slides ready" role="application" data-transition-speed="default" data-background-transition="none" style="">
        <div class="slides" style="width: 960px; height: 700px; zoom: 1.13143;">
            
            <section data-charset="utf-8" style="top: 241px; display: block;" data-markdown="" data-markdown-parsed="true" data-background="white" class="has-light-background past" hidden="" aria-hidden="true"><!-- -->
<div style="padding-top: 0px; font-size: 36px;" class="font-ubuntu-heavy text-pink text-bold">
<p style="color: #5289F7; font-weight: bold;">GitPitch.com is shutting down.<br>This slide deck will no longer<br>be available from March 1, 2021. </p></div>
</section><section data-charset="utf-8" style="top: 0px; display: block;" class="stack present"><section data-markdown="" data-markdown-parsed="true" style="top: 196.5px; display: block;" class="present"><h2 id="-part-14-fixtures">‚òÄÔ∏è Part 14: Fixtures</h2>
<h3 id="-you-will-learn">üìö You will learn</h3>
<ul>
<li>how to load and use data fixtures</li>
</ul>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 250.5px; display: block;" hidden=""><ul>
<li>start TodoMVC application using <code>npm start</code></li>
<li>open <code>cypress/integration/14-fixtures/spec.js</code></li>
</ul>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 135.5px; display: block;" hidden=""><h2 id="todo-reset-server-using-a-fixture">Todo: reset server using a fixture</h2>
<p>‚å®Ô∏è test "sets list of todos on the server"</p>
<ul>
<li>load fixture file "cypress/integration/two-items.json"</li>
<li>post the list to "/reset" as <code>{ todos: list }</code></li>
</ul>
<p>Tip: we are going to need <a href="https://on.cypress.io/fixture" rel="noopener noreferrer" target="_blank"><code>cy.fixture</code></a></p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="load-fixture-before-each-test">Load fixture before each test</h2>
<p>‚å®Ô∏è test "closure variable"</p>
<pre><code class="hljs lang- stylus"><span class="line"><span class="line-number"></span>let list</span><span class="line"><span class="line-number"></span><span class="hljs-function"><span class="hljs-title">beforeEach</span><span class="hljs-params">(()</span></span> =&gt; {</span><span class="line"><span class="line-number"></span>  cy.fixture(<span class="hljs-string">'two-items'</span>)</span><span class="line"><span class="line-number"></span>  <span class="hljs-comment">// then store the loaded items in variable "list"</span></span><span class="line"><span class="line-number"></span>})</span><span class="line"><span class="line-number"></span><span class="hljs-function"><span class="hljs-title">it</span><span class="hljs-params">(<span class="hljs-string">'sets list from context'</span>, ()</span></span> =&gt; {</span><span class="line"><span class="line-number"></span>  <span class="hljs-comment">// post items to the server</span></span><span class="line"><span class="line-number"></span>})</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="store-data-in-test-context">Store data in test context</h2>
<p>In Mocha, hooks like <code>before</code>, <code>beforeEach</code>, <code>it</code> can store data in "this" object, if the callbacks use "function () { ... }" form.</p>
<pre><code class="hljs lang- stylus"><span class="line"><span class="line-number"></span><span class="hljs-function"><span class="hljs-title">beforeEach</span><span class="hljs-params">(function ()</span></span> {</span><span class="line"><span class="line-number"></span>  this<span class="hljs-selector-class">.foo</span> = <span class="hljs-string">'bar'</span></span><span class="line"><span class="line-number"></span>})</span><span class="line"><span class="line-number"></span><span class="hljs-function"><span class="hljs-title">it</span><span class="hljs-params">(<span class="hljs-string">'has foo'</span>, function ()</span></span> {</span><span class="line"><span class="line-number"></span>  expect(this.foo)<span class="hljs-selector-class">.to</span><span class="hljs-selector-class">.equal</span>(<span class="hljs-string">'bar'</span>)</span><span class="line"><span class="line-number"></span>})</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="load-fixture-before-each-test">Load fixture before each test</h2>
<p>‚å®Ô∏è test context "this.list"</p>
<pre><code class="hljs lang- php"><span class="line"><span class="line-number"></span>context(<span class="hljs-string">'this.list'</span>, () =&gt; {</span><span class="line"><span class="line-number"></span>  beforeEach(<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>{</span><span class="line"><span class="line-number"></span>    cy.fixture(<span class="hljs-string">'two-items'</span>)</span><span class="line"><span class="line-number"></span>    <span class="hljs-comment">// then assign value to "this.list"</span></span><span class="line"><span class="line-number"></span>  })</span><span class="line"><span class="line-number"></span>  it(<span class="hljs-string">'sets list from context'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>{</span><span class="line"><span class="line-number"></span>    <span class="hljs-comment">// POST "this.list" to the server using "/reset"</span></span><span class="line"><span class="line-number"></span>  })</span><span class="line"><span class="line-number"></span>  it(<span class="hljs-string">'has valid list with 2 items'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>{</span><span class="line"><span class="line-number"></span>    <span class="hljs-comment">// check that "this.list" has 2 items</span></span><span class="line"><span class="line-number"></span>  })</span><span class="line"><span class="line-number"></span>})</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h3 id="-be-careful-trying-to-replace-beforeeach-with-before-">‚ö†Ô∏è Be careful trying to replace <code>beforeEach</code> with <code>before</code></h3>
<p>‚å®Ô∏è test context "this.list"</p>
<p>Try saving time by replacing <code>beforeEach</code> with <code>before</code>.</p>
<p>What happens? How do you solve this?</p>
<aside class="notes"><p>Each test wipes away the previous context object. Thus "this.list" becomes undefined when the second test runs. You can use closure variable instead of "this" to get around this. This is a common problem when trying to save time on login.</p>
</aside></section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="fixtures-recipe">Fixtures recipe</h2>
<p>Check out the "Fixtures" recipe in <a href="https://github.com/cypress-io/cypress-example-recipes" rel="noopener noreferrer" target="_blank">github.com/cypress-io/cypress-example-recipes</a> repository.</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="log-in-once">Log in once</h2>
<pre><code class="hljs lang- coffeescript"><span class="line"><span class="line-number"></span>let token</span><span class="line"><span class="line-number"></span>before(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {</span><span class="line"><span class="line-number"></span>  cy.request(...)</span><span class="line"><span class="line-number"></span>    .its(<span class="hljs-string">'response.body.token'</span>)</span><span class="line"><span class="line-number"></span>    .<span class="hljs-keyword">then</span>(t =&gt; {</span><span class="line"><span class="line-number"></span>      <span class="hljs-regexp">//</span> save token <span class="hljs-keyword">in</span> closure variable</span><span class="line"><span class="line-number"></span>      token = t</span><span class="line"><span class="line-number"></span>    })</span><span class="line"><span class="line-number"></span>})</span><span class="line"><span class="line-number"></span>beforeEach(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {</span><span class="line"><span class="line-number"></span>  localStorage.setItem(<span class="hljs-string">'login-token'</span>, token)</span><span class="line"><span class="line-number"></span>})</span><span class="line"><span class="line-number"></span><span class="hljs-regexp">//</span> each test <span class="hljs-keyword">is</span> logged <span class="hljs-keyword">in</span></span></code></pre>


<aside class="notes"><p>This is common solution to speeding up slow login - log in once, then store cookies and tokens and set them before each test.</p>
</aside></section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="-this-shortcut"><code>@ = this</code> shortcut</h2>
<p>‚å®Ô∏è test context "@list"</p>
<pre><code class="hljs lang- lisp"><span class="line"><span class="line-number"></span>beforeEach(<span class="hljs-name">function</span> () {</span><span class="line"><span class="line-number"></span>  // cy.fixture(<span class="hljs-name">&lt;filename&gt;</span>).as(<span class="hljs-name">&lt;alias</span> name&gt;)</span><span class="line"><span class="line-number"></span>  cy.fixture('two-items').as('list')</span><span class="line"><span class="line-number"></span>})</span><span class="line"><span class="line-number"></span>it('works', function () {</span><span class="line"><span class="line-number"></span>  // inside test use <span class="hljs-string">"this.list</span></span><span class="line"><span class="line-number"></span><span class="hljs-string">})</span></span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="remember-the-queue-of-commands">Remember the queue of commands</h2>
<pre><code class="hljs lang- stylus"><span class="line"><span class="line-number"></span><span class="hljs-function"><span class="hljs-title">it</span><span class="hljs-params">(<span class="hljs-string">'does not work'</span>, function ()</span></span> {</span><span class="line"><span class="line-number"></span>  cy.fixture(<span class="hljs-string">'two-items'</span>).as(<span class="hljs-string">'list'</span>)</span><span class="line"><span class="line-number"></span>  <span class="hljs-comment">// we are using "this.list" BEFORE it was set in</span></span><span class="line"><span class="line-number"></span>  <span class="hljs-comment">// the above asynchronous call</span></span><span class="line"><span class="line-number"></span>  expect(this.list)<span class="hljs-selector-class">.to</span><span class="hljs-selector-class">.have</span><span class="hljs-selector-class">.length</span>(<span class="hljs-number">2</span>)</span><span class="line"><span class="line-number"></span>  cy.request(<span class="hljs-string">'POST'</span>, <span class="hljs-string">'/reset'</span>, { todos: this<span class="hljs-selector-class">.list</span> })</span><span class="line"><span class="line-number"></span>})</span></code></pre>


<aside class="notes"><p>Walk through each line to number the order in which commands are executed</p>
</aside></section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="add-command-to-the-queue">Add command to the queue</h2>
<pre><code class="hljs lang- pgsql"><span class="line"><span class="line-number"></span>it(<span class="hljs-string">'works if we change the order'</span>, <span class="hljs-keyword">function</span> () {</span><span class="line"><span class="line-number"></span>  cy.fixture(<span class="hljs-string">'two-items'</span>)</span><span class="line"><span class="line-number"></span>    .<span class="hljs-keyword">as</span>(<span class="hljs-string">'list'</span>)</span><span class="line"><span class="line-number"></span>    .<span class="hljs-keyword">then</span>(() =&gt; {</span><span class="line"><span class="line-number"></span>      // <span class="hljs-keyword">by</span> now the fixture has been saved <span class="hljs-keyword">into</span> "this.list"</span><span class="line"><span class="line-number"></span>      // <span class="hljs-keyword">check</span> that "this.list" has <span class="hljs-number">2</span> items</span><span class="line"><span class="line-number"></span>      // use it <span class="hljs-keyword">to</span> post <span class="hljs-keyword">to</span> the <span class="hljs-keyword">server</span></span><span class="line"><span class="line-number"></span>    })</span><span class="line"><span class="line-number"></span>})</span></code></pre>


<aside class="notes"><p>Using <code>cy.then</code> to schedule another callback will solve the problem.</p>
</aside></section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="fixtures-in-different-encoding">Fixtures in different encoding</h2>
<p>Todo: in file <code>cypress/support/index.js</code> uncomment</p>
<pre><code class="hljs lang- stylus"><span class="line"><span class="line-number"></span><span class="hljs-function"><span class="hljs-title">require</span><span class="hljs-params">(<span class="hljs-string">'cypress-dark/src/halloween'</span>)</span></span></span></code></pre>


<p>Run at least one failing test</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><p><img src="./Fixtures_files/halloween.png" title="" alt="Halloween theme" class="Halloween theme" style="width: auto;height: auto;" data-image-key="9106716039324547181"></p>
<p>How did the test load and play MP3?</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><p>In <code>node_modules/cypress-dark/halloween.js</code></p>
<pre><code class="hljs lang- javascript"><span class="line"><span class="line-number"></span><span class="hljs-keyword">const</span> witchLaughs = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {</span><span class="line"><span class="line-number"></span>  <span class="hljs-keyword">const</span> filename = join(getSourceFolder(), <span class="hljs-string">'halloween-laugh.mp3'</span>)</span><span class="line"><span class="line-number"></span>  cy.readFile(filename, <span class="hljs-string">'base64'</span>, { <span class="hljs-attr">log</span>: <span class="hljs-literal">false</span> }).then(<span class="hljs-function"><span class="hljs-params">mp3</span> =&gt;</span> {</span><span class="line"><span class="line-number"></span>    <span class="hljs-keyword">const</span> uri = <span class="hljs-string">'data:audio/mp3;base64,'</span> + mp3</span><span class="line"><span class="line-number"></span>    <span class="hljs-keyword">const</span> audio = <span class="hljs-keyword">new</span> Audio(uri)</span><span class="line"><span class="line-number"></span>    audio.play()</span><span class="line"><span class="line-number"></span>  })</span><span class="line"><span class="line-number"></span>}</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><p>You can do the same with MP3 files in your fixtures folder</p>
<pre><code class="hljs lang- javascript"><span class="line"><span class="line-number"></span>cy.fixture(<span class="hljs-string">'audio/sound.mp3'</span>, <span class="hljs-string">'base64'</span>).then(<span class="hljs-function">(<span class="hljs-params">mp3</span>) =&gt;</span> {</span><span class="line"><span class="line-number"></span>  <span class="hljs-keyword">const</span> uri = <span class="hljs-string">'data:audio/mp3;base64,'</span> + mp3</span><span class="line"><span class="line-number"></span>  <span class="hljs-keyword">const</span> audio = <span class="hljs-keyword">new</span> Audio(uri)</span><span class="line"><span class="line-number"></span>&nbsp;</span><span class="line"><span class="line-number"></span>  audio.play()</span><span class="line"><span class="line-number"></span>})</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="other-formats">Other formats</h2>
<pre><code class="hljs lang- less"><span class="line"><span class="line-number"></span><span class="hljs-selector-tag">cy</span><span class="hljs-selector-class">.fixture</span>(<span class="hljs-string">'images/logo.png'</span>)<span class="hljs-selector-class">.then</span>((logo) =&gt; {</span><span class="line"><span class="line-number"></span>  <span class="hljs-comment">// logo will be encoded as base64</span></span><span class="line"><span class="line-number"></span>  <span class="hljs-comment">// and should look something like this:</span></span><span class="line"><span class="line-number"></span>  <span class="hljs-comment">// aIJKnwxydrB10NVWqhlmmC+ZiWs7otHotSAAAOw==...</span></span><span class="line"><span class="line-number"></span>})</span><span class="line"><span class="line-number"></span><span class="hljs-selector-tag">cy</span><span class="hljs-selector-class">.fixture</span>(<span class="hljs-string">'images/logo.png'</span>, <span class="hljs-string">'binary'</span>)<span class="hljs-selector-class">.then</span>((logo) =&gt; {</span><span class="line"><span class="line-number"></span>  <span class="hljs-comment">// logo will be encoded as binary</span></span><span class="line"><span class="line-number"></span>  <span class="hljs-comment">// and should look something like this:</span></span><span class="line"><span class="line-number"></span>  <span class="hljs-comment">// 000000000000000000000000000000000000000000...</span></span><span class="line"><span class="line-number"></span>})</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="-readfile-and-writefile-"><code>readFile</code> and <code>writeFile</code></h2>
<p><code>cy.readFile</code> will retry until file exists and assertions that follow it pass</p>
<pre><code class="hljs lang- reasonml"><span class="line"><span class="line-number"></span><span class="hljs-comment">// note: path is relative to the project's root</span></span><span class="line"><span class="line-number"></span>cy.read<span class="hljs-constructor">File('<span class="hljs-params">some</span><span class="hljs-operator">/</span><span class="hljs-params">nested</span><span class="hljs-operator">/</span><span class="hljs-params">path</span><span class="hljs-operator">/</span><span class="hljs-params">story</span>.<span class="hljs-params">txt</span>')</span></span><span class="line"><span class="line-number"></span>  .should('eq', 'Once upon a time...')</span></code></pre>


<p><a href="https://on.cypress.io/readfile" rel="noopener noreferrer" target="_blank">on/readfile</a> and <a href="https://on.cypress.io/writefile" rel="noopener noreferrer" target="_blank">on/writefile</a></p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="todo-readfile-after-post">Todo <code>readFile</code> after POST</h2>
<pre><code class="hljs lang- typescript"><span class="line"><span class="line-number"></span>it(<span class="hljs-string">'reads items loaded from fixture'</span>, <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {</span><span class="line"><span class="line-number"></span>  cy.fixture(<span class="hljs-string">'two-items'</span>).then(<span class="hljs-function"><span class="hljs-params">todos</span> =&gt;</span> {</span><span class="line"><span class="line-number"></span>    <span class="hljs-comment">// post items</span></span><span class="line"><span class="line-number"></span>    <span class="hljs-comment">// read file 'todomvc/data.json',</span></span><span class="line"><span class="line-number"></span>    <span class="hljs-comment">// should be equal to the loaded fixture</span></span><span class="line"><span class="line-number"></span>    <span class="hljs-comment">// note: JSON is parsed automatically!</span></span><span class="line"><span class="line-number"></span>  })</span><span class="line"><span class="line-number"></span>})</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="todo-readfile-entered-through-ui">Todo <code>readFile</code> entered through UI</h2>
<pre><code class="hljs lang- stylus"><span class="line"><span class="line-number"></span><span class="hljs-function"><span class="hljs-title">it</span><span class="hljs-params">(<span class="hljs-string">'saves todo'</span>, ()</span></span> =&gt; {</span><span class="line"><span class="line-number"></span>  <span class="hljs-comment">// reset data on the server</span></span><span class="line"><span class="line-number"></span>  <span class="hljs-comment">// visit the page</span></span><span class="line"><span class="line-number"></span>  <span class="hljs-comment">// type new todo via GUI</span></span><span class="line"><span class="line-number"></span>  <span class="hljs-comment">// read file - it should have the item you have entered</span></span><span class="line"><span class="line-number"></span>})</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="-fixtures">üèÅ Fixtures</h2>
<p>Fixtures are data object for testing and network stubs</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="-fixtures">üèÅ Fixtures</h2>
<p>When loading fixtures remember JavaScript + Mocha lifecycle and <code>this</code> context</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="-fixtures">üèÅ Fixtures</h2>
<ul>
<li><a href="https://on.cypress.io/fixture" rel="noopener noreferrer" target="_blank"><code>cy.fixture</code></a></li>
<li>"Fixtures" recipe in <a href="https://github.com/cypress-io/cypress-example-recipes" rel="noopener noreferrer" target="_blank">github.com/cypress-io/cypress-example-recipes</a></li>
</ul>
</section></section>
            
        </div>
        

<footer id="title-footer" class="footer-visible"><p id="notification" class="footer-fade"> </p></footer>


    <div class="backgrounds"><div class="slide-background past" data-background-hash="whitenullnullnullnullnullnullnullnullnull" data-loaded="true" style="background: white; display: block;"><div class="slide-background-content"></div></div><div class="slide-background stack present" data-loaded="true" style="display: block;"><div class="slide-background-content"></div><div class="slide-background present" data-loaded="true" style="display: block;"><div class="slide-background-content"></div></div><div class="slide-background future" data-loaded="true" style="display: block;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: block;" data-loaded="true"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div></div></div><div class="progress" style="display: block;"><span style="width: 73.0435px;"></span></div><aside class="controls" data-controls-layout="bottom-right" data-controls-back-arrows="faded" style="display: block;"><button class="navigate-left enabled" aria-label="previous slide"><div class="controls-arrow"></div></button><button class="navigate-right highlight" aria-label="next slide" disabled="disabled"><div class="controls-arrow"></div></button><button class="navigate-up" aria-label="above slide" disabled="disabled"><div class="controls-arrow"></div></button><button class="navigate-down enabled highlight" aria-label="below slide"><div class="controls-arrow"></div></button></aside><div class="slide-number" style="display: block;"><a href="https://gitpitch.com/cypress-io/testing-workshop-cypress?p=slides/14-fixtures#/1"><span class="slide-number-a">2</span><span class="slide-number-delimiter">/</span><span class="slide-number-b">24</span></a></div><div class="speaker-notes" data-prevent-swipe="" tabindex="0"></div><div class="pause-overlay"><button class="resume-button">Resume presentation</button></div><div id="aria-status-div" aria-live="polite" aria-atomic="true" style="position: absolute; height: 1px; width: 1px; overflow: hidden; clip: rect(1px, 1px, 1px, 1px);">‚òÄÔ∏è Part 14: Fixtures
üìö You will learn

how to load and use data fixtures

</div></div>
    
    
    <div class="gp-menu">
      <div class="slide-menu-button">
        
        <a class="reveal" onclick="goHome(); return false;" title="Go Home" rel="noopener noreferrer" target="_blank">
          <i class="gp-menu-bars fa fa-home" aria-hidden="true"> </i>
        </a>
        
        
        <a class="reveal" onclick="toggleMenu(); return false;" title="Slide Table-of-Contents, Key=M" rel="noopener noreferrer" target="_blank">
          <i class="gp-menu-bars fa fa-bars" aria-hidden="true"> </i>
        </a>
        
      </div>
    <nav class="slide-menu slide-menu--left"><ol class="slide-menu-toolbar"><li data-button="0" class="toolbar-panel-button" data-panel="Slides"><i class="fa fa-list"></i></li><li id="close"><i class="fa fa-times"></i></li></ol><div data-panel="Slides" class="slide-menu-panel active-menu-panel"><div class="toc-title"><hr class="fade-away"></div><ul class="slide-menu-items"><li class="slide-menu-item no-title past" data-item="0" data-slide-h="0" data-slide-v="0"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 0</span></li><li class="slide-menu-item active" data-item="1" data-slide-h="1" data-slide-v="0"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">‚òÄÔ∏è Part 14: Fixtures</span></li><li class="slide-menu-item-vertical no-title future" data-item="2" data-slide-h="1" data-slide-v="1"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 2</span></li><li class="slide-menu-item-vertical future" data-item="3" data-slide-h="1" data-slide-v="2"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Todo: reset server using a fixture</span></li><li class="slide-menu-item-vertical future" data-item="4" data-slide-h="1" data-slide-v="3"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Load fixture before each test</span></li><li class="slide-menu-item-vertical future" data-item="5" data-slide-h="1" data-slide-v="4"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Store data in test context</span></li><li class="slide-menu-item-vertical future" data-item="6" data-slide-h="1" data-slide-v="5"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Load fixture before each test</span></li><li class="slide-menu-item-vertical future" data-item="7" data-slide-h="1" data-slide-v="6"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">‚ö†Ô∏è Be careful trying to replace beforeEach with before</span></li><li class="slide-menu-item-vertical future" data-item="8" data-slide-h="1" data-slide-v="7"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Fixtures recipe</span></li><li class="slide-menu-item-vertical future" data-item="9" data-slide-h="1" data-slide-v="8"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Log in once</span></li><li class="slide-menu-item-vertical future" data-item="10" data-slide-h="1" data-slide-v="9"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">@ = this shortcut</span></li><li class="slide-menu-item-vertical future" data-item="11" data-slide-h="1" data-slide-v="10"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Remember the queue of commands</span></li><li class="slide-menu-item-vertical future" data-item="12" data-slide-h="1" data-slide-v="11"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Add command to the queue</span></li><li class="slide-menu-item-vertical future" data-item="13" data-slide-h="1" data-slide-v="12"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Fixtures in different encoding</span></li><li class="slide-menu-item-vertical no-title future" data-item="14" data-slide-h="1" data-slide-v="13"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 14</span></li><li class="slide-menu-item-vertical no-title future" data-item="15" data-slide-h="1" data-slide-v="14"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 15</span></li><li class="slide-menu-item-vertical no-title future" data-item="16" data-slide-h="1" data-slide-v="15"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 16</span></li><li class="slide-menu-item-vertical future" data-item="17" data-slide-h="1" data-slide-v="16"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Other formats</span></li><li class="slide-menu-item-vertical future" data-item="18" data-slide-h="1" data-slide-v="17"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">readFile and writeFile</span></li><li class="slide-menu-item-vertical future" data-item="19" data-slide-h="1" data-slide-v="18"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Todo readFile after POST</span></li><li class="slide-menu-item-vertical future" data-item="20" data-slide-h="1" data-slide-v="19"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Todo readFile entered through UI</span></li><li class="slide-menu-item-vertical future" data-item="21" data-slide-h="1" data-slide-v="20"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">üèÅ Fixtures</span></li><li class="slide-menu-item-vertical future" data-item="22" data-slide-h="1" data-slide-v="21"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">üèÅ Fixtures</span></li><li class="slide-menu-item-vertical future" data-item="23" data-slide-h="1" data-slide-v="22"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">üèÅ Fixtures</span></li></ul></div></nav><div class="slide-menu-overlay"></div></div>
    
    
    <script src="./Fixtures_files/reveal.js"></script>
    <script src="./Fixtures_files/jquery.min.js"></script>
    
    
    

    <script>
        Reveal.initialize({
            
            controls: true,
            
            controlsLayout: 'bottom-right',
            progress: true,
            embedded: true,
            margin: 0.0,
            
            
            showNotes: false,
            transition: 'none',
            backgroundTransition: 'none',
            autoSlide: 0,
            loop: false,
            center: true,
            rtl: false,
            shuffle: false,
            mouseWheel: false,
            
            controlsTutorial: true,
            
            
            
              slideNumber: 'c/t', // slideNumber: false,
            
            history: true,
            
            
            menu: {
              custom: [],
              path : "/assets/libs/slides/plugin/menu",
              themes : false,
              transitions:  false,
              markers: true,
              sticky: true,
              autoOpen: true
            },
            
            
            dependencies: [
                { src: "/assets/libs/slides/plugin/markdown/marked.js",
                  condition: function() {
                    return !!document.querySelector( '[data-markdown]' );
                  }},
                { src: "/assets/libs/slides/plugin/markdown/markdown.js",
                condition: function() {
                  return !!document.querySelector( '[data-markdown]' );
                }},
                
                { src:"/assets/libs/slides/plugin/menu/menu.js",
                  async: true},
                
                
                
                
                { src: '/assets/libs/highlight.js/9.15.8/highlight.js', async: true },
                
                { src: '/assets/libs/highlight.js/9.15.8/reveal-code-focus-30.js',
                  async: true,
                  callback: function() {
                    RevealCodeFocus();
                  }
                },
                
                
                
                
                
            ]
        });

        Reveal.addEventListener('ready', function(evt) {

          if(typeof twtter !== "undefined") {
              twttr.widgets.load();
          }

          upgradeAnchors();
          pushFootnoteNotification();

          // Force refresh to workaround Reveal.js 3.8.0
          // first render problem re. scrollHeight calc
          // for slides with non-text (image) content.
          setTimeout(Reveal.layout, 500);
        });

        
        Reveal.addEventListener('menu-ready', function(evt) {
            toggleMenuOff();
        });
        

        Reveal.addEventListener('slidechanged', function(evt) {
          /*
          if (evt.indexh === 0 && evt.indexv === 0) {
            pushHelpNotification();
          } else {
            pushFootnoteNotification();
          }
          */
          pushFootnoteNotification();
        });

        Reveal.configure({
            keyboard: {
                88: function() { // bind "x" key to "select" code block content

                    var currentSlide = Reveal.getCurrentSlide();
                    var preBlock = $(currentSlide).find("pre");

                    if(preBlock.length > 0) {

                        if (window.getSelection) {
                            var range = document.createRange();
                            range.selectNodeContents(preBlock[0]);
                            var selection = window.getSelection();
                            selection.removeAllRanges();
                            selection.addRange(range);
                        }
                    }
                }
            }
        });

        function goHome() {
            window.location.href = "https://gitpitch.com";
        }

        function enterFullscreen() {
            Reveal.triggerKey(70);
        };

        function enterOverview() {
            Reveal.toggleOverview();
        };

        function enterBlackout() {
            Reveal.togglePause();
        };

        function toggleHelp() {
          Reveal.toggleHelp();
        }

        function enableEvents() {
            Reveal.addEventListeners();
        };

        function disableEvents() {
            Reveal.removeEventListeners();
        };

        function toggleMenuOff() {
            if(RevealMenu && RevealMenu.isOpen()) {
                RevealMenu.toggle();
            }
        }

        function toggleMenu() {
            if(RevealMenu) {
                RevealMenu.toggle();
            }
        }

        function upgradeAnchors() {
            Array.from(document.getElementsByTagName('a')).forEach($link => {
              if ($link.hostname !== window.location.hostname) {
                $link.setAttribute('rel', 'noopener noreferrer');
                $link.setAttribute('target', '_blank');
              }
            });
        }

    </script>

    

    

<script>
    function pushNotification(msg, fade) {
      var footer = document.getElementById('title-footer')
      var notification = document.getElementById('notification')
      if(window.innerWidth < 700) {
        footer.className = "footer-hidden";
      } else {
          footer.className = "footer-visible";
          if(fade) {
            notification.className = "footer-fade";
            notification.innerHTML = msg;
          } else {
            notification.className = "footer-hard";
            notification.innerHTML = msg;
          }
      }
    };

    function pushHelpNotification() {
      if(window.innerWidth < 700)
        pushNotification("<a href='#' onclick='RevealMenu.toggle()'>Menu</a> | <a href='#' onclick='enterFullscreen()'>Fullscreen</a> | <a href='#' onclick='enterOverview()'>Overview</a> | <a href='#' onclick='enterBlackout()'>Blackout</a> | <a href='#' onclick='RevealNotes.open()'>Speaker</a> | <a href='#' onclick='enterHelp()'>Help</a>");
      else
        pushNotification("Navigate : Space / Arrow Keys | <a href='#' onclick='RevealMenu.toggle()'>M</a> - Menu | <a href='#' onclick='enterFullscreen()'>F</a> - Fullscreen | <a href='#' onclick='enterOverview()'>O</a> - Overview | <a href='#' onclick='enterBlackout()'>B</a> - Blackout | <a href='#' onclick='RevealNotes.open()'>S</a> - Speaker | <a href='#' onclick='enterHelp()'>?</a> - Help");
    }

    function pushFootnoteNotification() {
      
        pushNotification(" ", true);
      
    }

    function pushCodePresentingStepNotification(step, frags) {
      // pushNotification("Code Presenting - Step " + step + " / " + frags, true);
    }
</script>





</body></html>