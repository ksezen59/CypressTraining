<!DOCTYPE html>
<!-- saved from url=(0081)https://gitpitch.com/cypress-io/testing-workshop-cypress?p=slides/15-debugging#/1 -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport">
    <title>GitPitch Markdown</title>
    <meta name="description" content="Slide Decks for Tech Conferences, Training, Developer Advocates, and Educators">
    <meta name="keywords" content="Markdown, Presentation, Slides, Developer">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    
    <meta name="‚Äùrobots‚Äù" content="‚Äùnoindex,nofollow‚Äù">
    
    

<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:site" content="@gitpitch">
<meta name="twitter:title" content="GitPitch Markdown">
<meta name="twitter:description" content="The perfect slide deck solution for Tech Conferences, Training, Developer Advocates, and Educators.">
<meta name="twitter:image" content="https://gitpitch.com/assets/img/gitpitch-40-splash.png">


    

<meta property="og:site_name" content="GitPitch">
<meta property="og:type" content="article">
<meta property="og:title" content="GitPitch Markdown">
<meta property="og:description" content="The perfect slide deck solution for Tech Conferences, Training, Developer Advocates, and Educators.">
<meta property="og:image" content="https://gitpitch.com/assets/img/gitpitch-40-splash.png">
<meta property="og:url" content="https://gitpitch.com/cypress-io/testing-workshop-cypress/master?grs=github&amp;t=template&amp;p=slides%2F15-debugging">


    

<link rel="alternate" type="application/json+oembed" href="https://gitpitch.com/pitchme/oembed?url=https%3A%2F%2Fgitpitch.com%2Fcypress-io%2Ftesting-workshop-cypress%2Fmaster%3Fgrs%3Dgithub%26t%3Dtemplate%26p%3Dslides%252F15-debugging&amp;format=json" title="GitPitch - Markdown Presentations for Everyone on Git">
<link rel="alternate" type="text/xml+oembed" href="https://gitpitch.com/pitchme/oembed?url=https%3A%2F%2Fgitpitch.com%2Fcypress-io%2Ftesting-workshop-cypress%2Fmaster%3Fgrs%3Dgithub%26t%3Dtemplate%26p%3Dslides%252F15-debugging&amp;format=xml" title="GitPitch - Markdown Presentations for Everyone on Git">


    
    
    <link rel="apple-touch-icon" sizes="120x120" href="https://gitpitch.com/assets/img/favicon/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="https://gitpitch.com/assets/img/favicon/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="https://gitpitch.com/assets/img/favicon/favicon-16x16.png">
    
    
    
<link href="./Debugging_files/reveal.css" rel="stylesheet" type="text/css">

<link href="./Debugging_files/moon.css" rel="stylesheet" type="text/css" id="theme">
<link href="./Debugging_files/future.css" rel="stylesheet" type="text/css">


<link href="./Debugging_files/title-footer-mod.css" rel="stylesheet" type="text/css" id="theme">

<link href="./Debugging_files/paper.css" rel="stylesheet" type="text/css">


<link href="./Debugging_files/atom-one-light.css" rel="stylesheet" type="text/css">
<link href="./Debugging_files/octicons.css" rel="stylesheet" type="text/css">
<link href="./Debugging_files/fa-all.min.css" rel="stylesheet" type="text/css">
<link href="./Debugging_files/fa-v4-shims.min.css" rel="stylesheet" type="text/css">

<link href="./Debugging_files/pitchcore.css" rel="stylesheet" type="text/css">




<link href="./Debugging_files/pitch.css" rel="stylesheet" type="text/css">

<link href="./Debugging_files/pitchmenu.css" rel="stylesheet" type="text/css">


<link href="./Debugging_files/menu.css" rel="stylesheet" type="text/css">



<link href="./Debugging_files/pitchbardark.css" rel="stylesheet" type="text/css">


<link href="./Debugging_files/pitchcode.css" rel="stylesheet" type="text/css">



<link href="./Debugging_files/css" rel="stylesheet">



    
    

<style>
.half-image img {
  width: 40%;
}

</style>


    <link href="./Debugging_files/pitchpost.css" rel="stylesheet" type="text/css">
    

    
        
            

<script async="" src="./Debugging_files/analytics.js"></script><script async="" src="./Debugging_files/analytics.js"></script><script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  
  ga('create', 'UA-80973712-1', 'auto');
  ga('send', 'pageview');
  
</script>


        
        
            

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  
  ga('create', 'UA-59606812-9', 'auto', 'gpu');
  ga('gpu.send', 'pageview');
  
</script><script type="text/javascript" src="./Debugging_files/marked.js"></script><script type="text/javascript" src="./Debugging_files/markdown.js"></script><script type="text/javascript" src="./Debugging_files/menu.js"></script><script type="text/javascript" src="./Debugging_files/highlight.js"></script><script type="text/javascript" src="./Debugging_files/reveal-code-focus-30.js"></script>


        
    


</head>
<body>
    


    <div class="reveal none center has-vertical-slides has-horizontal-slides ready" role="application" data-transition-speed="default" data-background-transition="none" style="">
        <div class="slides" style="width: 960px; height: 700px; zoom: 1.13143;">
            
            <section data-charset="utf-8" style="top: 241px; display: block;" data-markdown="" data-markdown-parsed="true" data-background="white" class="has-light-background past" hidden="" aria-hidden="true"><!-- -->
<div style="padding-top: 0px; font-size: 36px;" class="font-ubuntu-heavy text-pink text-bold">
<p style="color: #5289F7; font-weight: bold;">GitPitch.com is shutting down.<br>This slide deck will no longer<br>be available from March 1, 2021. </p></div>
</section><section data-charset="utf-8" style="top: 0px; display: block;" class="stack present"><section data-markdown="" data-markdown-parsed="true" style="top: 100px; display: block;" class="present"><h2 id="-part-15-debugging">‚òÄÔ∏è Part 15: Debugging</h2>
<h3 id="-you-will-learn">üìö You will learn</h3>
<ul>
<li>how to see debug messages from Cypress itself</li>
<li>how to debug individual commands</li>
<li>common sources of problems</li>
</ul>
<p>Also: <a href="http://on.cypress.io/debugging" rel="noopener noreferrer" target="_blank">on.cypress.io/debugging</a></p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 96px; display: block;" hidden=""><h2 id="something-goes-wrong">Something goes wrong</h2>
<p>üëé Documentation, <a href="https://github.com/cypress-io/cypress/issues" rel="noopener noreferrer" target="_blank">GH issues</a> and <a href="https://on.cypress.io/chat" rel="noopener noreferrer" target="_blank">chat</a> do not help.</p>
<p>Open an issue üéâ</p>
<ul>
<li>reproduction code</li>
<li>expected results</li>
<li>video / screenshots</li>
<li>Cypress internal messages</li>
</ul>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 257.5px; display: block;" hidden=""><p>Typically <code>cypress open</code> works and <code>cypress run</code> does not work</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="run-cypress-with-debug-">Run Cypress with <code>DEBUG</code></h2>
<p>Stop the application server and run Cypress only.</p>
<pre><code class="hljs lang- routeros"><span class="line"><span class="line-number"></span><span class="hljs-attribute">DEBUG</span>=cypress* \</span><span class="line"><span class="line-number"></span>  npx cypress <span class="hljs-builtin-name">run</span> \</span><span class="line"><span class="line-number"></span>  --spec cypress/integration/02-adding-items/demo.js</span></code></pre>


<aside class="notes"><p>You should see a LOT of messages before the error is shown</p>
</aside></section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><p>Cypress uses <a href="https://github.com/visionmedia/debug#readme" rel="noopener noreferrer" target="_blank">debug</a> module to control debug CLI messages.</p>
<p>Read <a href="https://glebbahmutov.com/blog/good-logging/" rel="noopener noreferrer" target="_blank">Good Logging</a></p>
<h2 id="todo">Todo</h2>
<pre><code class="hljs lang- routeros"><span class="line"><span class="line-number"></span><span class="hljs-comment"># See CLI messages</span></span><span class="line"><span class="line-number"></span><span class="hljs-attribute">DEBUG</span>=cypress:cli npx <span class="hljs-built_in">..</span>.</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><p><img src="./Debugging_files/debug-cli.png" title="" alt="Debugging CLI" class="Debugging CLI" style="width: auto;height: auto;" data-image-key="-8661156238868091844"></p>
<p>A few debug messages from CLI module</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><p>In addition to <code>cypress:cli</code> there are DEBUG name for each package in <a href="https://github.com/cypress-io/cypress/tree/develop/packages" rel="noopener noreferrer" target="_blank">https://github.com/cypress-io/cypress/tree/develop/packages</a></p>
<ul>
<li><code>cypress:launcher</code> - controls finding and opening browsers</li>
<li><code>cypress:server</code> - the ‚ù§Ô∏è of Cypress that controls everything</li>
</ul>
<p>and <a href="https://github.com/cypress-io/cypress/blob/develop/CONTRIBUTING.md#cypress-and-packages" rel="noopener noreferrer" target="_blank">others</a></p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="detailed-logs">Detailed logs</h2>
<p><strong>note:</strong> there are more levels to DEBUG messages</p>
<pre><code class="hljs lang- routeros"><span class="line"><span class="line-number"></span><span class="hljs-comment"># prints very few top-level messages</span></span><span class="line"><span class="line-number"></span><span class="hljs-attribute">DEBUG</span>=cypress:server <span class="hljs-built_in">..</span>.</span><span class="line"><span class="line-number"></span><span class="hljs-comment"># prints ALL messages from server package</span></span><span class="line"><span class="line-number"></span><span class="hljs-attribute">DEBUG</span>=cypress:server* <span class="hljs-built_in">..</span>.</span><span class="line"><span class="line-number"></span><span class="hljs-comment"># prints messages only from config parsing</span></span><span class="line"><span class="line-number"></span><span class="hljs-attribute">DEBUG</span>=cypress:server:config <span class="hljs-built_in">..</span>.</span></code></pre>


<p>This allows you to isolate the problem a little better</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="debug-logs-in-the-browser">Debug logs in the browser</h2>
<p>If the problem is seen during <code>cypress open</code> you can print debug logs too. Open browser DevTools</p>
<pre><code class="hljs lang- vim"><span class="line"><span class="line-number"></span>localStorage.<span class="hljs-keyword">debug</span> = <span class="hljs-string">'cypress*'</span></span><span class="line"><span class="line-number"></span>// <span class="hljs-keyword">to</span> disable <span class="hljs-keyword">debug</span> <span class="hljs-keyword">messages</span></span><span class="line"><span class="line-number"></span><span class="hljs-keyword">delete</span> localStorage.<span class="hljs-keyword">debug</span></span></code></pre>


<p>Reload the browser "Cmd + R"</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><p><img src="./Debugging_files/debug-driver.jpg" title="" alt="Debugging browser" class="Debugging browser" style="width: auto;height: auto;" data-image-key="4622186145382578819"></p>
<p>There is only "cypress:driver" package that runs in the browser</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="step-through-test">Step through test</h2>
<p>Open 'cypress/integration/02-adding-items/demo.js' and add <a href="https://on.cypress.io/pause" rel="noopener noreferrer" target="_blank">cy.pause()</a> command</p>
<pre><code class="hljs lang- scilab"><span class="line"><span class="line-number"></span>it(<span class="hljs-string">'adds items'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> {</span></span><span class="line"><span class="line-number"></span>  cy.<span class="hljs-keyword">pause</span>()</span><span class="line"><span class="line-number"></span>  cy.get(<span class="hljs-string">'.new-todo'</span>)</span><span class="line"><span class="line-number"></span>    <span class="hljs-comment">// ...</span></span><span class="line"><span class="line-number"></span>})</span></code></pre>


<aside class="notes"><p>You can observe the application, the DOM, the network, the storage after each command to make sure everything happens as expected.</p>
</aside></section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="after-the-test-has-finished">After the test has finished</h2>
<pre><code class="hljs lang- sml"><span class="line"><span class="line-number"></span>cy.now(<span class="hljs-symbol">'command</span> name', ...args)</span><span class="line"><span class="line-number"></span>  .<span class="hljs-keyword">then</span>(console.log)</span></code></pre>


<p>Runs single command <em>right now</em>. Might change in the future.</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="common-problems">Common problems</h2>
<h3 id="-missing-">üëé Missing <code>--</code></h3>
<p>Forgetting to use <code>--</code> when calling <code>npm run cy:run</code> with arguments</p>
<pre><code class="hljs lang- routeros"><span class="line"><span class="line-number"></span>npm <span class="hljs-builtin-name">run</span> cy:<span class="hljs-builtin-name">run</span> --record --spec <span class="hljs-built_in">..</span>.</span></code></pre>


<p>NPM "swallows" <code>--record</code> argument</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="-solution">‚úÖ Solution</h2>
<p>Separate NPM and Cypress arguments with <code>--</code></p>
<pre><code class="hljs lang- routeros"><span class="line"><span class="line-number"></span>npm <span class="hljs-builtin-name">run</span> cy:<span class="hljs-builtin-name">run</span> -- --record --spec <span class="hljs-built_in">..</span>.</span></code></pre>


<p><strong>note:</strong> in the future, we will try to do the right thing even if you forget to separate with <code>--</code>, see <a href="https://github.com/cypress-io/cypress/issues/3470" rel="noopener noreferrer" target="_blank">#3470</a></p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="-solution">‚úÖ Solution</h2>
<p>Use <a href="https://github.com/zkat/npx" rel="noopener noreferrer" target="_blank">npx</a> that comes with modern Node versions</p>
<pre><code class="hljs lang- routeros"><span class="line"><span class="line-number"></span>npx cypress <span class="hljs-builtin-name">run</span> --record --spec <span class="hljs-built_in">..</span>.</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="-solution">‚úÖ Solution</h2>
<p>Use <a href="https://yarnpkg.com/lang/en/docs/cli/run/" rel="noopener noreferrer" target="_blank">yarn run</a></p>
<pre><code class="hljs lang- routeros"><span class="line"><span class="line-number"></span>yarn <span class="hljs-builtin-name">run</span> cy:<span class="hljs-builtin-name">run</span> --record --spec <span class="hljs-built_in">..</span>.</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h3 id="-cypress-gui-slows-down-on-longer-tests">üëé Cypress GUI slows down on longer tests</h3>
<p>Usually caused by large DOM snapshots for time-traveling debugger</p>
<ul>
<li>run individual specs, do not use "Run all"</li>
<li>split longer tests</li>
<li>use config <a href="https://on.cypress.io/configuration#Global" rel="noopener noreferrer" target="_blank">numTestsKeptInMemory</a></li>
</ul>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="use-devtools-debugger">Use DevTools debugger</h2>
<p>Just put <code>debugger</code> keyword in your callbacks</p>
<pre><code class="hljs lang- scilab"><span class="line"><span class="line-number"></span>it(<span class="hljs-string">'adds items'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> {</span></span><span class="line"><span class="line-number"></span>  cy.get(<span class="hljs-string">'.new-todo'</span>)</span><span class="line"><span class="line-number"></span>    .<span class="hljs-built_in">type</span>(<span class="hljs-string">'todo A{enter}'</span>)</span><span class="line"><span class="line-number"></span>    .<span class="hljs-built_in">type</span>(<span class="hljs-string">'todo B{enter}'</span>)</span><span class="line"><span class="line-number"></span>    .<span class="hljs-built_in">type</span>(<span class="hljs-string">'todo C{enter}'</span>)</span><span class="line"><span class="line-number"></span>    .<span class="hljs-built_in">type</span>(<span class="hljs-string">'todo D{enter}'</span>)</span><span class="line"><span class="line-number"></span>  <span class="hljs-comment">// NO</span></span><span class="line"><span class="line-number"></span>  debugger</span><span class="line"><span class="line-number"></span>  cy.get(<span class="hljs-string">'.todo-list li'</span>) <span class="hljs-comment">// command</span></span><span class="line"><span class="line-number"></span>    .should(<span class="hljs-string">'have.length'</span>, <span class="hljs-number">4</span>) <span class="hljs-comment">// assertion</span></span><span class="line"><span class="line-number"></span>})</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><pre><code class="hljs lang- scilab"><span class="line"><span class="line-number"></span>it(<span class="hljs-string">'adds items'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> {</span></span><span class="line"><span class="line-number"></span>  cy.get(<span class="hljs-string">'.new-todo'</span>)</span><span class="line"><span class="line-number"></span>    .<span class="hljs-built_in">type</span>(<span class="hljs-string">'todo A{enter}'</span>)</span><span class="line"><span class="line-number"></span>    .<span class="hljs-built_in">type</span>(<span class="hljs-string">'todo B{enter}'</span>)</span><span class="line"><span class="line-number"></span>    .<span class="hljs-built_in">type</span>(<span class="hljs-string">'todo C{enter}'</span>)</span><span class="line"><span class="line-number"></span>    .<span class="hljs-built_in">type</span>(<span class="hljs-string">'todo D{enter}'</span>)</span><span class="line"><span class="line-number"></span>    .<span class="hljs-keyword">then</span>(() =&gt; {</span><span class="line"><span class="line-number"></span>      <span class="hljs-comment">// YES</span></span><span class="line"><span class="line-number"></span>      debugger</span><span class="line"><span class="line-number"></span>    })</span><span class="line"><span class="line-number"></span>  cy.get(<span class="hljs-string">'.todo-list li'</span>) <span class="hljs-comment">// command</span></span><span class="line"><span class="line-number"></span>    .should(<span class="hljs-string">'have.length'</span>, <span class="hljs-number">4</span>) <span class="hljs-comment">// assertion</span></span><span class="line"><span class="line-number"></span>})</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="todo-debug-from-callback-function">Todo: debug from callback function</h2>
<p>Add custom expectation function after <code>c.get('.todo-list li')</code> to see elements it returns</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><pre><code class="hljs lang- javascript"><span class="line"><span class="line-number"></span>cy.get(<span class="hljs-string">'.todo-list li'</span>) <span class="hljs-comment">// command</span></span><span class="line"><span class="line-number"></span>    .should(<span class="hljs-function"><span class="hljs-params">$li</span> =&gt;</span> {</span><span class="line"><span class="line-number"></span>      <span class="hljs-built_in">console</span>.log($li)</span><span class="line"><span class="line-number"></span>      <span class="hljs-keyword">debugger</span></span><span class="line"><span class="line-number"></span>    })</span><span class="line"><span class="line-number"></span>    .should(<span class="hljs-string">'have.length'</span>, <span class="hljs-number">4</span>)</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="todo">Todo</h2>
<p>Try <a href="https://on.cypress.io/debug" rel="noopener noreferrer" target="_blank">cy.debug</a> command</p>
<pre><code class="hljs lang- less"><span class="line"><span class="line-number"></span><span class="hljs-selector-tag">cy</span><span class="hljs-selector-class">.get</span>(<span class="hljs-string">'.todo-list li'</span>) <span class="hljs-comment">// command</span></span><span class="line"><span class="line-number"></span>  <span class="hljs-selector-class">.debug</span>()</span><span class="line"><span class="line-number"></span>  <span class="hljs-selector-class">.should</span>(<span class="hljs-string">'have.length'</span>, <span class="hljs-number">4</span>)</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><p><img src="./Debugging_files/debug-command.png" title="" alt="`cy.debug`" class="`cy.debug`" style="width: auto;height: auto;" data-image-key="-1591119755970423538"></p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><p><strong>note:</strong> <code>debugger</code> and <code>cy.debug</code> only work in <code>cypress open</code> when DevTools is open.</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="debug-messages-inside-cy-task-">Debug messages inside <code>cy.task</code></h2>
<p>To show debug messages from the backend code in <code>cypress/plugins</code></p>
<ul>
<li>use <code>console.log</code></li>
<li>use <code>DEBUG=...</code> and <a href="https://github.com/visionmedia/debug#readme" rel="noopener noreferrer" target="_blank">debug module</a></li>
</ul>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="if-you-app-throws-an-error">If you app throws an error</h2>
<p>‚å®Ô∏è Add in "todomvc/app.js"</p>
<pre><code class="hljs lang- coffeescript"><span class="line"><span class="line-number"></span><span class="hljs-regexp">//</span> <span class="hljs-keyword">throw</span> error <span class="hljs-keyword">when</span> loading todos</span><span class="line"><span class="line-number"></span>loadTodos ({ commit }) {</span><span class="line"><span class="line-number"></span>  commit(<span class="hljs-string">'SET_LOADING'</span>, <span class="hljs-literal">true</span>)</span><span class="line"><span class="line-number"></span>&nbsp;</span><span class="line"><span class="line-number"></span>  setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {</span><span class="line"><span class="line-number"></span>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Error(<span class="hljs-string">'Random problem'</span>)</span><span class="line"><span class="line-number"></span>  }, <span class="hljs-number">50</span>)</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><p><img src="./Debugging_files/random-problem.png" title="" alt="Random problem" class="Random problem" style="width: auto;height: auto;" data-image-key="-8645624273268663003"></p>
<p>Cypress catches exception from the application</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h3 id="todo-let-s-ignore-the-random-problem-">Todo: let's ignore the "Random problem"</h3>
<p>Before visiting the page, set error handler</p>
<pre><code class="hljs lang- coffeescript"><span class="line"><span class="line-number"></span>cy.<span class="hljs-literal">on</span>(<span class="hljs-string">'uncaught:exception'</span>, <span class="hljs-function"><span class="hljs-params">(e, runnable)</span> =&gt;</span> {</span><span class="line"><span class="line-number"></span>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'error'</span>, e)</span><span class="line"><span class="line-number"></span>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'runnable'</span>, runnable)</span><span class="line"><span class="line-number"></span>  <span class="hljs-regexp">//</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span> <span class="hljs-keyword">if</span> you WANT test to fail</span><span class="line"><span class="line-number"></span>})</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><p>If you want to print the caught error:</p>
<pre><code class="hljs lang- pgsql"><span class="line"><span class="line-number"></span>beforeEach(<span class="hljs-keyword">function</span> visitSite () {</span><span class="line"><span class="line-number"></span>  cy.log(<span class="hljs-string">'Visiting'</span>, Cypress.config(<span class="hljs-string">'baseUrl'</span>))</span><span class="line"><span class="line-number"></span>  cy.<span class="hljs-keyword">on</span>(<span class="hljs-string">'uncaught:exception'</span>, (e, runnable) =&gt; {</span><span class="line"><span class="line-number"></span>    console.log(<span class="hljs-string">'error'</span>, e)</span><span class="line"><span class="line-number"></span>    console.log(<span class="hljs-string">'runnable'</span>, runnable)</span><span class="line"><span class="line-number"></span>    // this <span class="hljs-keyword">is</span> <span class="hljs-keyword">NOT</span> going <span class="hljs-keyword">to</span> <span class="hljs-keyword">work</span></span><span class="line"><span class="line-number"></span>    cy.log(<span class="hljs-string">'caught error'</span>, e)</span><span class="line"><span class="line-number"></span>    // <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span> <span class="hljs-keyword">if</span> you WANT test <span class="hljs-keyword">to</span> fail</span><span class="line"><span class="line-number"></span>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span></span><span class="line"><span class="line-number"></span>  })</span><span class="line"><span class="line-number"></span>  cy.visit(<span class="hljs-string">'/'</span>)</span><span class="line"><span class="line-number"></span>})</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><p><img src="./Debugging_files/cy-log-from-fail.png" title="" alt="cy.log does not work" class="cy.log does not work" style="width: auto;height: auto;" data-image-key="6420354170130400472"></p>
<p><code>cy.log</code> changes <em>current</em> command chain.</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><p>You might try to use <code>Cypress.log</code> instead, but there is a problem <a href="https://github.com/cypress-io/cypress/issues/3513" rel="noopener noreferrer" target="_blank">#3513</a>. So use this secret method to log</p>
<pre><code class="hljs lang- coffeescript"><span class="line"><span class="line-number"></span>cy.<span class="hljs-literal">on</span>(<span class="hljs-string">'uncaught:exception'</span>, <span class="hljs-function"><span class="hljs-params">(e, runnable)</span> =&gt;</span> {</span><span class="line"><span class="line-number"></span>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'error'</span>, e)</span><span class="line"><span class="line-number"></span>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'runnable'</span>, runnable)</span><span class="line"><span class="line-number"></span>  cy.now(<span class="hljs-string">'log'</span>, <span class="hljs-string">'caught error'</span>, e)</span><span class="line"><span class="line-number"></span>  <span class="hljs-regexp">//</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span> <span class="hljs-keyword">if</span> you WANT test to fail</span><span class="line"><span class="line-number"></span>  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span></span><span class="line"><span class="line-number"></span>})</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="todo-set-up-global-error-handler">Todo: set up global error handler</h2>
<p>in "cypress/support/index.js"</p>
<pre><code class="hljs lang- coffeescript"><span class="line"><span class="line-number"></span>Cypress.<span class="hljs-literal">on</span>(<span class="hljs-string">'uncaught:exception'</span>, <span class="hljs-function"><span class="hljs-params">(e, runnable)</span> =&gt;</span> {</span><span class="line"><span class="line-number"></span>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'error'</span>, e)</span><span class="line"><span class="line-number"></span>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'runnable'</span>, runnable)</span><span class="line"><span class="line-number"></span>  <span class="hljs-regexp">//</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span> <span class="hljs-keyword">if</span> you WANT test to fail</span><span class="line"><span class="line-number"></span>})</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="how-to-debug-cypress-run-failures">How to debug "cypress run" failures</h2>
<h3 id="-isolate-the-problem">üî™ Isolate the problem</h3>
<ul class="">
<li class="fragment" data-fragment-index="0">look at the video recording and screenshots</li>
<li class="fragment" data-fragment-index="1">split large spec files into smaller ones</li>
<li class="fragment" data-fragment-index="2">split long tests into shorter ones</li>
<li class="fragment" data-fragment-index="3">run using <code>--browser chrome</code></li>
</ul>


<aside class="notes"><p>We are working on upgrading the Electron version shipped with Cypress.</p>
</aside></section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="-there-is-no-command-log-in-the-terminal-output">üëé There is no command log in the terminal output</h2>
<p>Cypress tests run in the browser.</p>
<p>We are working to send all browser events during the test to the terminal <a href="https://github.com/cypress-io/cypress/issues/448" rel="noopener noreferrer" target="_blank">#448</a></p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="cypress-failed-log">cypress-failed-log</h2>
<blockquote>
<p>Saves the Cypress test command log as a JSON file if a test fails</p>
</blockquote>
<p>Userspace plugin <a href="https://github.com/bahmutov/cypress-failed-log" rel="noopener noreferrer" target="_blank">bahmutov/cypress-failed-log</a></p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="todo">Todo</h2>
<ul>
<li><code>cypress-failed-log</code> is already installed in this repo</li>
<li>follow instructions in <code>cypress-failed-log</code> README and turn it on</li>
</ul>
<aside class="notes"><p>Need to uncomment the command in <code>cypress/support/index.js</code> and add task in <code>cypress/plugins/index.js</code></p>
</aside></section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="run-failing-test">Run failing test</h2>
<ul>
<li>add a failure to the <code>cypress/integration/02-adding-items/demo.js</code> spec</li>
<li>run this spec from the command line to see the command log</li>
</ul>
<aside class="notes"><p>expected result is on the next slide</p>
</aside></section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><p><img src="./Debugging_files/failed-log.png" title="" alt="Failed log" class="Failed log" style="width: auto;height: auto;" data-image-key="5415049605863868734"></p>
<p><code>cypress-failed-log</code> output.</p>
<p><strong>note:</strong> there is also a JSON file with the log</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="-debugging-is-hard">üèÅ Debugging is hard</h2>
<ul>
<li>race conditions in your application</li>
<li>bugs in Cypress</li>
<li>weird browser and server behavior</li>
</ul>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="-use-devtools">üèÅ Use DevTools</h2>
<p><code>debugger</code> and <code>cy.debug()</code></p>
<p>Pauses <em>both tests and application</em></p>
<h3 id="todo-demonstrate-this">Todo: demonstrate this</h3>
<aside class="notes"><p>It is nice to show how <code>debugger</code> pause stops all application's timers.</p>
</aside></section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="-isolate-the-problem">üèÅ Isolate the problem</h2>
<ul>
<li>smaller specs and tests</li>
<li>failed log</li>
<li><code>DEBUG=...</code> verbose logs</li>
</ul>
</section></section>
            
        </div>
        

<footer id="title-footer" class="footer-visible"><p id="notification" class="footer-fade"> </p></footer>


    <div class="backgrounds"><div class="slide-background past" data-background-hash="whitenullnullnullnullnullnullnullnullnull" data-loaded="true" style="background: white; display: block;"><div class="slide-background-content"></div></div><div class="slide-background stack present" data-loaded="true" style="display: block;"><div class="slide-background-content"></div><div class="slide-background present" data-loaded="true" style="display: block;"><div class="slide-background-content"></div></div><div class="slide-background future" data-loaded="true" style="display: block;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: block;" data-loaded="true"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div></div></div><div class="progress" style="display: block;"><span style="width: 40.9756px;"></span></div><aside class="controls" data-controls-layout="bottom-right" data-controls-back-arrows="faded" style="display: block;"><button class="navigate-left enabled" aria-label="previous slide"><div class="controls-arrow"></div></button><button class="navigate-right highlight" aria-label="next slide" disabled="disabled"><div class="controls-arrow"></div></button><button class="navigate-up" aria-label="above slide" disabled="disabled"><div class="controls-arrow"></div></button><button class="navigate-down enabled highlight" aria-label="below slide"><div class="controls-arrow"></div></button></aside><div class="slide-number" style="display: block;"><a href="https://gitpitch.com/cypress-io/testing-workshop-cypress?p=slides/15-debugging#/1"><span class="slide-number-a">2</span><span class="slide-number-delimiter">/</span><span class="slide-number-b">42</span></a></div><div class="speaker-notes" data-prevent-swipe="" tabindex="0"></div><div class="pause-overlay"><button class="resume-button">Resume presentation</button></div><div id="aria-status-div" aria-live="polite" aria-atomic="true" style="position: absolute; height: 1px; width: 1px; overflow: hidden; clip: rect(1px, 1px, 1px, 1px);">‚òÄÔ∏è Part 15: Debugging
üìö You will learn

how to see debug messages from Cypress itself
how to debug individual commands
common sources of problems

Also: on.cypress.io/debugging
</div></div>
    
    
    <div class="gp-menu">
      <div class="slide-menu-button">
        
        <a class="reveal" onclick="goHome(); return false;" title="Go Home" rel="noopener noreferrer" target="_blank">
          <i class="gp-menu-bars fa fa-home" aria-hidden="true"> </i>
        </a>
        
        
        <a class="reveal" onclick="toggleMenu(); return false;" title="Slide Table-of-Contents, Key=M" rel="noopener noreferrer" target="_blank">
          <i class="gp-menu-bars fa fa-bars" aria-hidden="true"> </i>
        </a>
        
      </div>
    <nav class="slide-menu slide-menu--left"><ol class="slide-menu-toolbar"><li data-button="0" class="toolbar-panel-button" data-panel="Slides"><i class="fa fa-list"></i></li><li id="close"><i class="fa fa-times"></i></li></ol><div data-panel="Slides" class="slide-menu-panel active-menu-panel"><div class="toc-title"><hr class="fade-away"></div><ul class="slide-menu-items"><li class="slide-menu-item no-title past" data-item="0" data-slide-h="0" data-slide-v="0"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 0</span></li><li class="slide-menu-item active" data-item="1" data-slide-h="1" data-slide-v="0"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">‚òÄÔ∏è Part 15: Debugging</span></li><li class="slide-menu-item-vertical future" data-item="2" data-slide-h="1" data-slide-v="1"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Something goes wrong</span></li><li class="slide-menu-item-vertical no-title future" data-item="3" data-slide-h="1" data-slide-v="2"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 3</span></li><li class="slide-menu-item-vertical future" data-item="4" data-slide-h="1" data-slide-v="3"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Run Cypress with DEBUG</span></li><li class="slide-menu-item-vertical future" data-item="5" data-slide-h="1" data-slide-v="4"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Todo</span></li><li class="slide-menu-item-vertical no-title future" data-item="6" data-slide-h="1" data-slide-v="5"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 6</span></li><li class="slide-menu-item-vertical no-title future" data-item="7" data-slide-h="1" data-slide-v="6"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 7</span></li><li class="slide-menu-item-vertical future" data-item="8" data-slide-h="1" data-slide-v="7"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Detailed logs</span></li><li class="slide-menu-item-vertical future" data-item="9" data-slide-h="1" data-slide-v="8"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Debug logs in the browser</span></li><li class="slide-menu-item-vertical no-title future" data-item="10" data-slide-h="1" data-slide-v="9"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 10</span></li><li class="slide-menu-item-vertical future" data-item="11" data-slide-h="1" data-slide-v="10"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Step through test</span></li><li class="slide-menu-item-vertical future" data-item="12" data-slide-h="1" data-slide-v="11"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">After the test has finished</span></li><li class="slide-menu-item-vertical future" data-item="13" data-slide-h="1" data-slide-v="12"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Common problems</span></li><li class="slide-menu-item-vertical future" data-item="14" data-slide-h="1" data-slide-v="13"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">‚úÖ Solution</span></li><li class="slide-menu-item-vertical future" data-item="15" data-slide-h="1" data-slide-v="14"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">‚úÖ Solution</span></li><li class="slide-menu-item-vertical future" data-item="16" data-slide-h="1" data-slide-v="15"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">‚úÖ Solution</span></li><li class="slide-menu-item-vertical future" data-item="17" data-slide-h="1" data-slide-v="16"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">üëé Cypress GUI slows down on longer tests</span></li><li class="slide-menu-item-vertical future" data-item="18" data-slide-h="1" data-slide-v="17"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Use DevTools debugger</span></li><li class="slide-menu-item-vertical no-title future" data-item="19" data-slide-h="1" data-slide-v="18"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 19</span></li><li class="slide-menu-item-vertical future" data-item="20" data-slide-h="1" data-slide-v="19"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Todo: debug from callback function</span></li><li class="slide-menu-item-vertical no-title future" data-item="21" data-slide-h="1" data-slide-v="20"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 21</span></li><li class="slide-menu-item-vertical future" data-item="22" data-slide-h="1" data-slide-v="21"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Todo</span></li><li class="slide-menu-item-vertical no-title future" data-item="23" data-slide-h="1" data-slide-v="22"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 23</span></li><li class="slide-menu-item-vertical no-title future" data-item="24" data-slide-h="1" data-slide-v="23"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 24</span></li><li class="slide-menu-item-vertical future" data-item="25" data-slide-h="1" data-slide-v="24"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Debug messages inside cy.task</span></li><li class="slide-menu-item-vertical future" data-item="26" data-slide-h="1" data-slide-v="25"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">If you app throws an error</span></li><li class="slide-menu-item-vertical no-title future" data-item="27" data-slide-h="1" data-slide-v="26"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 27</span></li><li class="slide-menu-item-vertical future" data-item="28" data-slide-h="1" data-slide-v="27"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Todo: let's ignore the "Random problem"</span></li><li class="slide-menu-item-vertical no-title future" data-item="29" data-slide-h="1" data-slide-v="28"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 29</span></li><li class="slide-menu-item-vertical no-title future" data-item="30" data-slide-h="1" data-slide-v="29"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 30</span></li><li class="slide-menu-item-vertical no-title future" data-item="31" data-slide-h="1" data-slide-v="30"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 31</span></li><li class="slide-menu-item-vertical future" data-item="32" data-slide-h="1" data-slide-v="31"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Todo: set up global error handler</span></li><li class="slide-menu-item-vertical future" data-item="33" data-slide-h="1" data-slide-v="32"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">How to debug "cypress run" failures</span></li><li class="slide-menu-item-vertical future" data-item="34" data-slide-h="1" data-slide-v="33"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">üëé There is no command log in the terminal output</span></li><li class="slide-menu-item-vertical future" data-item="35" data-slide-h="1" data-slide-v="34"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">cypress-failed-log</span></li><li class="slide-menu-item-vertical future" data-item="36" data-slide-h="1" data-slide-v="35"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Todo</span></li><li class="slide-menu-item-vertical future" data-item="37" data-slide-h="1" data-slide-v="36"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Run failing test</span></li><li class="slide-menu-item-vertical no-title future" data-item="38" data-slide-h="1" data-slide-v="37"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 38</span></li><li class="slide-menu-item-vertical future" data-item="39" data-slide-h="1" data-slide-v="38"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">üèÅ Debugging is hard</span></li><li class="slide-menu-item-vertical future" data-item="40" data-slide-h="1" data-slide-v="39"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">üèÅ Use DevTools</span></li><li class="slide-menu-item-vertical future" data-item="41" data-slide-h="1" data-slide-v="40"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">üèÅ Isolate the problem</span></li></ul></div></nav><div class="slide-menu-overlay"></div></div>
    
    
    <script src="./Debugging_files/reveal.js"></script>
    <script src="./Debugging_files/jquery.min.js"></script>
    
    
    

    <script>
        Reveal.initialize({
            
            controls: true,
            
            controlsLayout: 'bottom-right',
            progress: true,
            embedded: true,
            margin: 0.0,
            
            
            showNotes: false,
            transition: 'none',
            backgroundTransition: 'none',
            autoSlide: 0,
            loop: false,
            center: true,
            rtl: false,
            shuffle: false,
            mouseWheel: false,
            
            controlsTutorial: true,
            
            
            
              slideNumber: 'c/t', // slideNumber: false,
            
            history: true,
            
            
            menu: {
              custom: [],
              path : "/assets/libs/slides/plugin/menu",
              themes : false,
              transitions:  false,
              markers: true,
              sticky: true,
              autoOpen: true
            },
            
            
            dependencies: [
                { src: "/assets/libs/slides/plugin/markdown/marked.js",
                  condition: function() {
                    return !!document.querySelector( '[data-markdown]' );
                  }},
                { src: "/assets/libs/slides/plugin/markdown/markdown.js",
                condition: function() {
                  return !!document.querySelector( '[data-markdown]' );
                }},
                
                { src:"/assets/libs/slides/plugin/menu/menu.js",
                  async: true},
                
                
                
                
                { src: '/assets/libs/highlight.js/9.15.8/highlight.js', async: true },
                
                { src: '/assets/libs/highlight.js/9.15.8/reveal-code-focus-30.js',
                  async: true,
                  callback: function() {
                    RevealCodeFocus();
                  }
                },
                
                
                
                
                
            ]
        });

        Reveal.addEventListener('ready', function(evt) {

          if(typeof twtter !== "undefined") {
              twttr.widgets.load();
          }

          upgradeAnchors();
          pushFootnoteNotification();

          // Force refresh to workaround Reveal.js 3.8.0
          // first render problem re. scrollHeight calc
          // for slides with non-text (image) content.
          setTimeout(Reveal.layout, 500);
        });

        
        Reveal.addEventListener('menu-ready', function(evt) {
            toggleMenuOff();
        });
        

        Reveal.addEventListener('slidechanged', function(evt) {
          /*
          if (evt.indexh === 0 && evt.indexv === 0) {
            pushHelpNotification();
          } else {
            pushFootnoteNotification();
          }
          */
          pushFootnoteNotification();
        });

        Reveal.configure({
            keyboard: {
                88: function() { // bind "x" key to "select" code block content

                    var currentSlide = Reveal.getCurrentSlide();
                    var preBlock = $(currentSlide).find("pre");

                    if(preBlock.length > 0) {

                        if (window.getSelection) {
                            var range = document.createRange();
                            range.selectNodeContents(preBlock[0]);
                            var selection = window.getSelection();
                            selection.removeAllRanges();
                            selection.addRange(range);
                        }
                    }
                }
            }
        });

        function goHome() {
            window.location.href = "https://gitpitch.com";
        }

        function enterFullscreen() {
            Reveal.triggerKey(70);
        };

        function enterOverview() {
            Reveal.toggleOverview();
        };

        function enterBlackout() {
            Reveal.togglePause();
        };

        function toggleHelp() {
          Reveal.toggleHelp();
        }

        function enableEvents() {
            Reveal.addEventListeners();
        };

        function disableEvents() {
            Reveal.removeEventListeners();
        };

        function toggleMenuOff() {
            if(RevealMenu && RevealMenu.isOpen()) {
                RevealMenu.toggle();
            }
        }

        function toggleMenu() {
            if(RevealMenu) {
                RevealMenu.toggle();
            }
        }

        function upgradeAnchors() {
            Array.from(document.getElementsByTagName('a')).forEach($link => {
              if ($link.hostname !== window.location.hostname) {
                $link.setAttribute('rel', 'noopener noreferrer');
                $link.setAttribute('target', '_blank');
              }
            });
        }

    </script>

    

    

<script>
    function pushNotification(msg, fade) {
      var footer = document.getElementById('title-footer')
      var notification = document.getElementById('notification')
      if(window.innerWidth < 700) {
        footer.className = "footer-hidden";
      } else {
          footer.className = "footer-visible";
          if(fade) {
            notification.className = "footer-fade";
            notification.innerHTML = msg;
          } else {
            notification.className = "footer-hard";
            notification.innerHTML = msg;
          }
      }
    };

    function pushHelpNotification() {
      if(window.innerWidth < 700)
        pushNotification("<a href='#' onclick='RevealMenu.toggle()'>Menu</a> | <a href='#' onclick='enterFullscreen()'>Fullscreen</a> | <a href='#' onclick='enterOverview()'>Overview</a> | <a href='#' onclick='enterBlackout()'>Blackout</a> | <a href='#' onclick='RevealNotes.open()'>Speaker</a> | <a href='#' onclick='enterHelp()'>Help</a>");
      else
        pushNotification("Navigate : Space / Arrow Keys | <a href='#' onclick='RevealMenu.toggle()'>M</a> - Menu | <a href='#' onclick='enterFullscreen()'>F</a> - Fullscreen | <a href='#' onclick='enterOverview()'>O</a> - Overview | <a href='#' onclick='enterBlackout()'>B</a> - Blackout | <a href='#' onclick='RevealNotes.open()'>S</a> - Speaker | <a href='#' onclick='enterHelp()'>?</a> - Help");
    }

    function pushFootnoteNotification() {
      
        pushNotification(" ", true);
      
    }

    function pushCodePresentingStepNotification(step, frags) {
      // pushNotification("Code Presenting - Step " + step + " / " + frags, true);
    }
</script>





</body></html>