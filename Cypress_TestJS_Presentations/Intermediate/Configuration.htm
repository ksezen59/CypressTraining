<!DOCTYPE html>
<!-- saved from url=(0085)https://gitpitch.com/cypress-io/testing-workshop-cypress?p=slides/10-configuration#/1 -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport">
    <title>GitPitch Markdown</title>
    <meta name="description" content="Slide Decks for Tech Conferences, Training, Developer Advocates, and Educators">
    <meta name="keywords" content="Markdown, Presentation, Slides, Developer">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    
    <meta name="‚Äùrobots‚Äù" content="‚Äùnoindex,nofollow‚Äù">
    
    

<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:site" content="@gitpitch">
<meta name="twitter:title" content="GitPitch Markdown">
<meta name="twitter:description" content="The perfect slide deck solution for Tech Conferences, Training, Developer Advocates, and Educators.">
<meta name="twitter:image" content="https://gitpitch.com/assets/img/gitpitch-40-splash.png">


    

<meta property="og:site_name" content="GitPitch">
<meta property="og:type" content="article">
<meta property="og:title" content="GitPitch Markdown">
<meta property="og:description" content="The perfect slide deck solution for Tech Conferences, Training, Developer Advocates, and Educators.">
<meta property="og:image" content="https://gitpitch.com/assets/img/gitpitch-40-splash.png">
<meta property="og:url" content="https://gitpitch.com/cypress-io/testing-workshop-cypress/master?grs=github&amp;t=template&amp;p=slides%2F10-configuration">


    

<link rel="alternate" type="application/json+oembed" href="https://gitpitch.com/pitchme/oembed?url=https%3A%2F%2Fgitpitch.com%2Fcypress-io%2Ftesting-workshop-cypress%2Fmaster%3Fgrs%3Dgithub%26t%3Dtemplate%26p%3Dslides%252F10-configuration&amp;format=json" title="GitPitch - Markdown Presentations for Everyone on Git">
<link rel="alternate" type="text/xml+oembed" href="https://gitpitch.com/pitchme/oembed?url=https%3A%2F%2Fgitpitch.com%2Fcypress-io%2Ftesting-workshop-cypress%2Fmaster%3Fgrs%3Dgithub%26t%3Dtemplate%26p%3Dslides%252F10-configuration&amp;format=xml" title="GitPitch - Markdown Presentations for Everyone on Git">


    
    
    <link rel="apple-touch-icon" sizes="120x120" href="https://gitpitch.com/assets/img/favicon/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="https://gitpitch.com/assets/img/favicon/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="https://gitpitch.com/assets/img/favicon/favicon-16x16.png">
    
    
    
<link href="./Configuration_files/reveal.css" rel="stylesheet" type="text/css">

<link href="./Configuration_files/moon.css" rel="stylesheet" type="text/css" id="theme">
<link href="./Configuration_files/future.css" rel="stylesheet" type="text/css">


<link href="./Configuration_files/title-footer-mod.css" rel="stylesheet" type="text/css" id="theme">

<link href="./Configuration_files/paper.css" rel="stylesheet" type="text/css">


<link href="./Configuration_files/atom-one-light.css" rel="stylesheet" type="text/css">
<link href="./Configuration_files/octicons.css" rel="stylesheet" type="text/css">
<link href="./Configuration_files/fa-all.min.css" rel="stylesheet" type="text/css">
<link href="./Configuration_files/fa-v4-shims.min.css" rel="stylesheet" type="text/css">

<link href="./Configuration_files/pitchcore.css" rel="stylesheet" type="text/css">




<link href="./Configuration_files/pitch.css" rel="stylesheet" type="text/css">

<link href="./Configuration_files/pitchmenu.css" rel="stylesheet" type="text/css">


<link href="./Configuration_files/menu.css" rel="stylesheet" type="text/css">



<link href="./Configuration_files/pitchbardark.css" rel="stylesheet" type="text/css">


<link href="./Configuration_files/pitchcode.css" rel="stylesheet" type="text/css">



<link href="./Configuration_files/css" rel="stylesheet">



    
    

<style>
.half-image img {
  width: 40%;
}

</style>


    <link href="./Configuration_files/pitchpost.css" rel="stylesheet" type="text/css">
    

    
        
            

<script async="" src="./Configuration_files/analytics.js"></script><script async="" src="./Configuration_files/analytics.js"></script><script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  
  ga('create', 'UA-80973712-1', 'auto');
  ga('send', 'pageview');
  
</script>


        
        
            

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  
  ga('create', 'UA-59606812-9', 'auto', 'gpu');
  ga('gpu.send', 'pageview');
  
</script><script type="text/javascript" src="./Configuration_files/marked.js"></script><script type="text/javascript" src="./Configuration_files/markdown.js"></script><script type="text/javascript" src="./Configuration_files/menu.js"></script><script type="text/javascript" src="./Configuration_files/highlight.js"></script><script type="text/javascript" src="./Configuration_files/reveal-code-focus-30.js"></script>


        
    


</head>
<body>
    


    <div class="reveal none center has-vertical-slides has-horizontal-slides ready" role="application" data-transition-speed="default" data-background-transition="none" style="">
        <div class="slides" style="width: 960px; height: 700px; zoom: 1.13143;">
            
            <section data-charset="utf-8" style="top: 241px; display: block;" data-markdown="" data-markdown-parsed="true" data-background="white" class="has-light-background past" hidden="" aria-hidden="true"><!-- -->
<div style="padding-top: 0px; font-size: 36px;" class="font-ubuntu-heavy text-pink text-bold">
<p style="color: #5289F7; font-weight: bold;">GitPitch.com is shutting down.<br>This slide deck will no longer<br>be available from March 1, 2021. </p></div>
</section><section data-charset="utf-8" style="top: 0px; display: block;" class="stack present"><section data-markdown="" data-markdown-parsed="true" style="top: 171px; display: block;" class="present"><h2 id="-part-10-configuration">‚òÄÔ∏è Part 10: Configuration</h2>
<h3 id="-you-will-learn">üìö You will learn</h3>
<ul>
<li>how to control Cypress parameters</li>
<li>how to pass environment variables to tests</li>
</ul>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 138px; display: block;" hidden=""><h2 id="configuration-settings">Configuration settings</h2>
<ul>
<li><code>baseUrl</code></li>
<li><code>env</code></li>
<li><code>reporter</code></li>
<li><code>video</code></li>
<li>and many, many more</li>
</ul>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 155px; display: block;" hidden=""><p>Cypress options can be set via:</p>
<ul>
<li><code>cypress.json</code></li>
<li>command line arguments</li>
<li>environment variables</li>
<li>in plugin code</li>
<li>at run-time</li>
</ul>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="question">Question</h2>
<blockquote>
<p>Where is the configuration documentation?</p>
</blockquote>
<aside class="notes"><p>You should find docs at <a href="https://on.cypress.io/configuration" rel="noopener noreferrer" target="_blank">https://on.cypress.io/configuration</a></p>
</aside></section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="-cypress-json-"><code>cypress.json</code></h2>
<p>Open <code>cypress.json</code> and check which options are set in this project.</p>
<pre><code class="hljs lang- json"><span class="line"><span class="line-number"></span>{</span><span class="line"><span class="line-number"></span>  <span class="hljs-attr">"viewportWidth"</span>: <span class="hljs-number">400</span>,</span><span class="line"><span class="line-number"></span>  <span class="hljs-attr">"viewportHeight"</span>: <span class="hljs-number">800</span>,</span><span class="line"><span class="line-number"></span>  <span class="hljs-attr">"ignoreTestFiles"</span>: <span class="hljs-string">"answer.js"</span>,</span><span class="line"><span class="line-number"></span>  <span class="hljs-attr">"baseUrl"</span>: <span class="hljs-string">"http://localhost:3000"</span></span><span class="line"><span class="line-number"></span>}</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><p><strong>Tip:</strong> if you have a lot of options to overwrite, use <code>--config-file &lt;...&gt;</code> argument to replace <code>cypress.json</code>.</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="-cypress-json-intellisense"><code>cypress.json</code> IntelliSense</h2>
<p><img src="./Configuration_files/cypress.json-intellisense.png" title="" alt="`cypress.json` IntelliSense in VSCode" class="`cypress.json` IntelliSense in VSCode" style="width: auto;height: auto;" data-image-key="7547381884091338146"></p>
<p>You can have IntelliSense in <code>cypress.json</code> in a modern editor, like VSCode.</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="vscode">VSCode</h2>
<p>In the user settings, global or workspace set</p>
<pre><code class="hljs lang- json"><span class="line"><span class="line-number"></span>{</span><span class="line"><span class="line-number"></span>  <span class="hljs-attr">"json.schemas"</span>: [</span><span class="line"><span class="line-number"></span>    {</span><span class="line"><span class="line-number"></span>      <span class="hljs-attr">"fileMatch"</span>: [<span class="hljs-string">"cypress.json"</span>],</span><span class="line"><span class="line-number"></span>      <span class="hljs-attr">"url"</span>: <span class="hljs-string">"https://on.cypress.io/cypress.schema.json"</span></span><span class="line"><span class="line-number"></span>    }</span><span class="line"><span class="line-number"></span>  ]</span><span class="line"><span class="line-number"></span>}</span></code></pre>


<p>Read: <a href="https://glebbahmutov.com/blog/json-schema-for-the-win/" rel="noopener noreferrer" target="_blank">https://glebbahmutov.com/blog/json-schema-for-the-win/</a></p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="vscode-alternative-">VSCode (alternative)</h2>
<p>Add <code>$schema</code> property to <code>cypress.json</code></p>
<pre><code class="hljs lang- json"><span class="line"><span class="line-number"></span>{</span><span class="line"><span class="line-number"></span>  <span class="hljs-attr">"viewportWidth"</span>: <span class="hljs-number">600</span>,</span><span class="line"><span class="line-number"></span>  <span class="hljs-attr">"viewportHeight"</span>: <span class="hljs-number">800</span>,</span><span class="line"><span class="line-number"></span>  <span class="hljs-attr">"ignoreTestFiles"</span>: <span class="hljs-string">"answer.js"</span>,</span><span class="line"><span class="line-number"></span>  <span class="hljs-attr">"baseUrl"</span>: <span class="hljs-string">"http://localhost:3000"</span>,</span><span class="line"><span class="line-number"></span>  <span class="hljs-attr">"$schema"</span>: <span class="hljs-string">"https://on.cypress.io/cypress.schema.json"</span></span><span class="line"><span class="line-number"></span>}</span></code></pre>


<p>Read: <a href="https://glebbahmutov.com/blog/json-schema-for-the-win/" rel="noopener noreferrer" target="_blank">https://glebbahmutov.com/blog/json-schema-for-the-win/</a></p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="command-line-arguments">command line arguments</h2>
<p>You can override default and <code>cypress.json</code> settings using <code>--config</code> flag</p>
<pre><code class="hljs lang- haml"><span class="line"><span class="line-number"></span>npx cypress open \</span><span class="line"><span class="line-number"></span>  -<span class="ruby">-config baseUrl=<span class="hljs-symbol">http:</span>/<span class="hljs-regexp">/todomvc.com/examples</span><span class="hljs-regexp">/dojo/</span>,defaultCommandTimeout=<span class="hljs-number">10000</span></span></span></code></pre>


<aside class="notes"><p>Try running <code>cypress/integration/02-adding-items/demo.js</code> spec.
Commonly used with <code>cypress run</code> command (specific spec, longer timeouts)</p>
</aside></section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="package-scripts">package scripts</h2>
<p><strong>Warning ‚ö†Ô∏è</strong> if you start Cypress via NPM package scripts, use <code>--</code> to add CLI arguments.</p>
<pre><code class="hljs lang- json"><span class="line"><span class="line-number"></span>{</span><span class="line"><span class="line-number"></span>  <span class="hljs-attr">"scripts"</span>: {</span><span class="line"><span class="line-number"></span>    <span class="hljs-attr">"cy:open"</span>: <span class="hljs-string">"cypress open"</span>,</span><span class="line"><span class="line-number"></span>    <span class="hljs-attr">"cy:run"</span>: <span class="hljs-string">"cypress run"</span></span><span class="line"><span class="line-number"></span>  }</span><span class="line"><span class="line-number"></span>}</span></code></pre>


<pre><code class="hljs lang- routeros"><span class="line"><span class="line-number"></span>npm <span class="hljs-builtin-name">run</span> cy:<span class="hljs-builtin-name">run</span> -- --config <span class="hljs-attribute">baseUrl</span>=http://todomvc.com/examples/dojo/</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="environment-variables">environment variables</h2>
<p>You can override <code>cypress.json</code> settings using environment variables that start with <code>CYPRESS_</code></p>
<pre><code class="hljs lang- ruby"><span class="line"><span class="line-number"></span>CYPRESS_baseUrl=<span class="hljs-symbol">http:</span>/<span class="hljs-regexp">/todomvc.com/examples</span><span class="hljs-regexp">/dojo/</span> npx cypress open</span><span class="line"><span class="line-number"></span><span class="hljs-comment"># same</span></span><span class="line"><span class="line-number"></span>CYPRESS_BASE_URL=<span class="hljs-symbol">http:</span>/<span class="hljs-regexp">/todomvc.com/examples</span><span class="hljs-regexp">/dojo/</span> npx cypress open</span></code></pre>


<aside class="notes"><p><code>cypress.json</code> &lt; environment variables &lt; CLI parameter</p>
</aside></section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="environment-variables">environment variables</h2>
<p>Use environment variables on CI. Especially to pass the private record key!</p>
<pre><code class="hljs lang- routeros"><span class="line"><span class="line-number"></span><span class="hljs-comment"># bad practice, can accidentally show up in STDOUT</span></span><span class="line"><span class="line-number"></span>npx cypress <span class="hljs-builtin-name">run</span> --record --recordKey abc<span class="hljs-built_in">..</span>.</span><span class="line"><span class="line-number"></span><span class="hljs-comment"># good</span></span><span class="line"><span class="line-number"></span><span class="hljs-attribute">CYPRESS_RECORD_KEY</span>=abc...</span><span class="line"><span class="line-number"></span>npx cypress <span class="hljs-builtin-name">run</span> --record</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="plugin-code">plugin code</h2>
<p>In <code>cypress/plugins/index.js</code></p>
<pre><code class="hljs lang- arduino"><span class="line"><span class="line-number"></span><span class="hljs-keyword">module</span>.exports = (on, <span class="hljs-built_in">config</span>) =&gt; {</span><span class="line"><span class="line-number"></span>  <span class="hljs-built_in">config</span>.baseUrl = <span class="hljs-string">'http://todomvc.com/examples/dojo/'</span></span><span class="line"><span class="line-number"></span>  <span class="hljs-comment">// change more options ...</span></span><span class="line"><span class="line-number"></span>  <span class="hljs-built_in">return</span> <span class="hljs-built_in">config</span></span><span class="line"><span class="line-number"></span>}</span></code></pre>


<p>Docs: <a href="https://on.cypress.io/configuration-api" rel="noopener noreferrer" target="_blank">https://on.cypress.io/configuration-api</a></p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="plugin-code">plugin code</h2>
<p>You can return a resolved config as a promise.</p>
<pre><code class="hljs lang- coffeescript"><span class="line"><span class="line-number"></span><span class="hljs-built_in">module</span>.exports = <span class="hljs-function"><span class="hljs-params">(<span class="hljs-literal">on</span>, config)</span> =&gt;</span> {</span><span class="line"><span class="line-number"></span>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Promise(<span class="hljs-function"><span class="hljs-params">(resolve, reject)</span> =&gt;</span> {</span><span class="line"><span class="line-number"></span>    <span class="hljs-regexp">//</span> load config <span class="hljs-keyword">from</span> file <span class="hljs-keyword">or</span> network</span><span class="line"><span class="line-number"></span>    resolve(loadedConfig)</span><span class="line"><span class="line-number"></span>  })</span><span class="line"><span class="line-number"></span>}</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="run-time-configuration">Run-time configuration</h2>
<p>You can change current setting <em>per spec</em> using <a href="https://on.cypress.io/config" rel="noopener noreferrer" target="_blank">Cypress.config</a> call.</p>
<pre><code class="hljs lang- lua"><span class="line"><span class="line-number"></span>Cypress.<span class="hljs-built_in">config</span>(<span class="hljs-string">'baseUrl'</span>, <span class="hljs-string">'http://todomvc.com/examples/dojo/'</span>)</span><span class="line"><span class="line-number"></span>beforeEach(<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">visitSite</span> <span class="hljs-params">()</span></span> {</span><span class="line"><span class="line-number"></span>  cy.<span class="hljs-built_in">log</span>(<span class="hljs-string">'Visiting'</span>, Cypress.<span class="hljs-built_in">config</span>(<span class="hljs-string">'baseUrl'</span>))</span><span class="line"><span class="line-number"></span>  cy.visit(<span class="hljs-string">'/'</span>)</span><span class="line"><span class="line-number"></span>})</span></code></pre>


<aside class="notes"><p>Use at your own risk, because the order of mutations and the final config in each test can be confusing.</p>
</aside></section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="resolved-configuration">Resolved configuration</h2>
<p><img src="./Configuration_files/configuration.png" title="" alt="resolved configuration" class="resolved configuration" style="width: auto;height: auto;" data-image-key="4661189517534114359"></p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="configuration-precedence">Configuration precedence</h2>
<p><code>cypress.json</code> &lt; environment variable &lt; CLI parameter &lt; plugin &lt; run-time</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="todo">Todo</h2>
<p>Run a single spec in headless mode against:</p>
<ul>
<li><code>localhost</code></li>
<li><code>http://todomvc.com/examples/dojo/</code></li>
</ul>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="environment-variables">Environment variables</h2>
<p><em>That are not Cypress configuration</em> - username, passwords, etc.</p>
<p>Guide <a href="https://on.cypress.io/environment-variables" rel="noopener noreferrer" target="_blank">https://on.cypress.io/environment-variables</a></p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="environment-variables">Environment variables</h2>
<h3 id="-cypress-json-env-"><code>cypress.json</code> "env"</h3>
<pre><code class="hljs lang- json"><span class="line"><span class="line-number"></span>{</span><span class="line"><span class="line-number"></span>  <span class="hljs-attr">"baseUrl"</span>: <span class="hljs-string">"http://localhost:3000"</span>,</span><span class="line"><span class="line-number"></span>  <span class="hljs-attr">"env"</span>: {</span><span class="line"><span class="line-number"></span>    <span class="hljs-attr">"todoTitle"</span>: <span class="hljs-string">"env todo"</span></span><span class="line"><span class="line-number"></span>  }</span><span class="line"><span class="line-number"></span>}</span></code></pre>

<pre><code class="hljs lang- stylus"><span class="line"><span class="line-number"></span><span class="hljs-function"><span class="hljs-title">it</span><span class="hljs-params">(<span class="hljs-string">'has env item'</span>, function ()</span></span> {</span><span class="line"><span class="line-number"></span>  expect(Cypress.env(<span class="hljs-string">'todoTitle'</span>))</span><span class="line"><span class="line-number"></span>    <span class="hljs-selector-class">.to</span><span class="hljs-selector-class">.equal</span>(<span class="hljs-string">'env todo'</span>)</span><span class="line"><span class="line-number"></span>})</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="environment-variables">Environment variables</h2>
<h3 id="-cypress-env-json-"><code>cypress.env.json</code></h3>
<pre><code class="hljs lang- json"><span class="line"><span class="line-number"></span>{</span><span class="line"><span class="line-number"></span>  <span class="hljs-attr">"eyes"</span>: <span class="hljs-string">"brown"</span>,</span><span class="line"><span class="line-number"></span>  <span class="hljs-attr">"t-shirt"</span>: <span class="hljs-string">"large"</span></span><span class="line"><span class="line-number"></span>}</span></code></pre>


<p>Environment variables will be merged.</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="using-env-variables">Using env variables</h2>
<pre><code class="hljs lang- reasonml"><span class="line"><span class="line-number"></span><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Cypress</span>.</span></span>env<span class="hljs-literal">()</span> <span class="hljs-comment">// returns entire merged object</span></span><span class="line"><span class="line-number"></span><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Cypress</span>.</span></span>env(name) <span class="hljs-comment">// returns single value</span></span></code></pre>


<p>See <a href="https://on.cypress.io/env" rel="noopener noreferrer" target="_blank">https://on.cypress.io/env</a></p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="todo-get-deep-property">Todo: get deep property</h2>
<p>Given <code>cypress.env.json</code></p>
<pre><code class="hljs lang- json"><span class="line"><span class="line-number"></span>{</span><span class="line"><span class="line-number"></span>  <span class="hljs-attr">"person"</span>: {</span><span class="line"><span class="line-number"></span>    <span class="hljs-attr">"name"</span>: <span class="hljs-string">"Joe"</span></span><span class="line"><span class="line-number"></span>  }</span><span class="line"><span class="line-number"></span>}</span></code></pre>


<p>Assert from the test that name is indeed <code>Joe</code>.</p>
<aside class="notes"><p>Use <code>Cypress._.get</code> or <code>cy.wrap(Cypress.env()).its('person.name')</code></p>
</aside></section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="environment-variables">Environment variables</h2>
<h3 id="command-line-arguments">command-line arguments</h3>
<pre><code class="hljs lang- routeros"><span class="line"><span class="line-number"></span>npx cypress open --env <span class="hljs-attribute">todoTitle</span>=<span class="hljs-string">"env todo"</span>,life=42</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><p><img src="./Configuration_files/env-from-cli.png" title="" alt="env variables from CLI" class="env variables from CLI" style="width: auto;height: auto;" data-image-key="5481917753182565256"></p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="todo">Todo</h2>
<p>Pass an object via command-line argument and see it in the configuration</p>
<pre><code class="hljs lang- vhdl"><span class="line"><span class="line-number"></span>npx cypress <span class="hljs-keyword">open</span> <span class="hljs-comment">--env ???</span></span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="environment-variables">Environment variables</h2>
<h3 id="environment-variables-">environment variables üôÇ</h3>
<pre><code class="hljs lang- routeros"><span class="line"><span class="line-number"></span><span class="hljs-attribute">CYPRESS_todoTitle</span>=<span class="hljs-string">"env todo"</span> <span class="hljs-attribute">CYPRESS_name</span>=CyBot \</span><span class="line"><span class="line-number"></span>  npx cypress open</span></code></pre>


<p>Unknown <code>CYPRESS_</code> variables will be added to <code>env</code> object.</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><p><img src="./Configuration_files/env-from-env.png" title="" alt="env variables from env" class="env variables from env" style="width: auto;height: auto;" data-image-key="-1561071748533939367"></p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="environment-variables">Environment variables</h2>
<h3 id="plugin">plugin</h3>
<pre><code class="hljs lang- coffeescript"><span class="line"><span class="line-number"></span><span class="hljs-built_in">module</span>.exports = <span class="hljs-function"><span class="hljs-params">(<span class="hljs-literal">on</span>, config)</span> =&gt;</span> {</span><span class="line"><span class="line-number"></span>  config.env.fooBar = <span class="hljs-string">'baz'</span></span><span class="line"><span class="line-number"></span>  <span class="hljs-keyword">return</span> config</span><span class="line"><span class="line-number"></span>}</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="environment-variables">Environment variables</h2>
<h3 id="run-time">run-time</h3>
<pre><code class="hljs lang- less"><span class="line"><span class="line-number"></span><span class="hljs-selector-tag">it</span>(<span class="hljs-string">'has env'</span>, () =&gt; {</span><span class="line"><span class="line-number"></span>  <span class="hljs-selector-tag">Cypress</span><span class="hljs-selector-class">.env</span>(<span class="hljs-string">'life'</span>, <span class="hljs-number">1</span>)</span><span class="line"><span class="line-number"></span>  <span class="hljs-selector-tag">expect</span>(Cypress.env(<span class="hljs-string">'life'</span>))<span class="hljs-selector-class">.to</span><span class="hljs-selector-class">.equal</span>(<span class="hljs-number">1</span>)</span><span class="line"><span class="line-number"></span>  <span class="hljs-comment">// change multiple values</span></span><span class="line"><span class="line-number"></span>  <span class="hljs-selector-tag">Cypress</span><span class="hljs-selector-class">.env</span>({</span><span class="line"><span class="line-number"></span>    <span class="hljs-attribute">life</span>: <span class="hljs-number">1</span>,</span><span class="line"><span class="line-number"></span>    <span class="hljs-attribute">state</span>: <span class="hljs-string">'busy'</span></span><span class="line"><span class="line-number"></span>  })</span><span class="line"><span class="line-number"></span>})</span></code></pre>


</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="environment-variables">Environment variables</h2>
<p>üõë Cannot change env variables at run-time using <code>Cypress.config('env', ...)</code></p>
<pre><code class="hljs lang- stylus"><span class="line"><span class="line-number"></span><span class="hljs-function"><span class="hljs-title">it</span><span class="hljs-params">(<span class="hljs-string">'has env'</span>, ()</span></span> =&gt; {</span><span class="line"><span class="line-number"></span>  expect(Cypress.env(<span class="hljs-string">'life'</span>))<span class="hljs-selector-class">.to</span><span class="hljs-selector-class">.equal</span>(<span class="hljs-number">42</span>)</span><span class="line"><span class="line-number"></span>  Cypress.config(<span class="hljs-string">'env'</span>, {</span><span class="line"><span class="line-number"></span>    life: <span class="hljs-number">1</span></span><span class="line"><span class="line-number"></span>  })</span><span class="line"><span class="line-number"></span>  <span class="hljs-comment">// nope, remains the same</span></span><span class="line"><span class="line-number"></span>  expect(Cypress.env(<span class="hljs-string">'life'</span>))<span class="hljs-selector-class">.to</span><span class="hljs-selector-class">.equal</span>(<span class="hljs-number">42</span>)</span><span class="line"><span class="line-number"></span>})</span></code></pre>


<p>‚úÖ Always use <code>Cypress.env(name, value)</code> to change.</p>
</section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="todo-per-environment-config">Todo: per-environment config</h2>
<p>Problem: let's create config settings per environment and load them using CLI argument.</p>
<pre><code class="hljs lang- vhdl"><span class="line"><span class="line-number"></span>npx cypress <span class="hljs-keyword">open</span> <span class="hljs-comment">--env staging</span></span><span class="line"><span class="line-number"></span>npx cypress <span class="hljs-keyword">open</span> <span class="hljs-comment">--env prod</span></span></code></pre>


<p>Should load options from <code>configs/staging.json</code> or from <code>configs/prod.json</code>.</p>
<aside class="notes"><p>What options would you set in each JSON file?
Would they be merged with other settings in <code>cypress.json</code>?
Answer at <a href="https://on.cypress.io/configuration-api" rel="noopener noreferrer" target="_blank">https://on.cypress.io/configuration-api</a></p>
</aside></section><section data-markdown="" data-markdown-parsed="true" class="future" aria-hidden="true" style="top: 350px; display: none;" hidden=""><h2 id="summary">Summary</h2>
<ul>
<li><code>--config-file &lt;json filepath&gt;</code></li>
</ul>
<table>
<thead>
<tr>
<th><code>config</code></th>
<th><code>env</code></th>
</tr>
</thead>
<tbody>
<tr>
<td><code>cypress.json</code></td>
<td><code>cypress.json</code></td>
</tr>
<tr>
<td>command line</td>
<td>command line</td>
</tr>
<tr>
<td>environment</td>
<td>environment</td>
</tr>
<tr>
<td>plugin</td>
<td>plugin</td>
</tr>
<tr>
<td>run-time</td>
<td>run-time</td>
</tr>
<tr>
<td></td>
<td><code>cypress.env.json</code></td>
</tr>
</tbody>
</table>
</section></section>
            
        </div>
        

<footer id="title-footer" class="footer-visible"><p id="notification" class="footer-fade"> </p></footer>


    <div class="backgrounds"><div class="slide-background past" data-background-hash="whitenullnullnullnullnullnullnullnullnull" data-loaded="true" style="background: white; display: block;"><div class="slide-background-content"></div></div><div class="slide-background stack present" data-loaded="true" style="display: block;"><div class="slide-background-content"></div><div class="slide-background present" data-loaded="true" style="display: block;"><div class="slide-background-content"></div></div><div class="slide-background future" data-loaded="true" style="display: block;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: block;" data-loaded="true"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div><div class="slide-background future" style="display: none;"><div class="slide-background-content"></div></div></div></div><div class="progress" style="display: block;"><span style="width: 49.4118px;"></span></div><aside class="controls" data-controls-layout="bottom-right" data-controls-back-arrows="faded" style="display: block;"><button class="navigate-left enabled" aria-label="previous slide"><div class="controls-arrow"></div></button><button class="navigate-right highlight" aria-label="next slide" disabled="disabled"><div class="controls-arrow"></div></button><button class="navigate-up" aria-label="above slide" disabled="disabled"><div class="controls-arrow"></div></button><button class="navigate-down enabled highlight" aria-label="below slide"><div class="controls-arrow"></div></button></aside><div class="slide-number" style="display: block;"><a href="https://gitpitch.com/cypress-io/testing-workshop-cypress?p=slides/10-configuration#/1"><span class="slide-number-a">2</span><span class="slide-number-delimiter">/</span><span class="slide-number-b">35</span></a></div><div class="speaker-notes" data-prevent-swipe="" tabindex="0"></div><div class="pause-overlay"><button class="resume-button">Resume presentation</button></div><div id="aria-status-div" aria-live="polite" aria-atomic="true" style="position: absolute; height: 1px; width: 1px; overflow: hidden; clip: rect(1px, 1px, 1px, 1px);">‚òÄÔ∏è Part 10: Configuration
üìö You will learn

how to control Cypress parameters
how to pass environment variables to tests

</div></div>
    
    
    <div class="gp-menu">
      <div class="slide-menu-button">
        
        <a class="reveal" onclick="goHome(); return false;" title="Go Home" rel="noopener noreferrer" target="_blank">
          <i class="gp-menu-bars fa fa-home" aria-hidden="true"> </i>
        </a>
        
        
        <a class="reveal" onclick="toggleMenu(); return false;" title="Slide Table-of-Contents, Key=M" rel="noopener noreferrer" target="_blank">
          <i class="gp-menu-bars fa fa-bars" aria-hidden="true"> </i>
        </a>
        
      </div>
    <nav class="slide-menu slide-menu--left"><ol class="slide-menu-toolbar"><li data-button="0" class="toolbar-panel-button" data-panel="Slides"><i class="fa fa-list"></i></li><li id="close"><i class="fa fa-times"></i></li></ol><div data-panel="Slides" class="slide-menu-panel active-menu-panel"><div class="toc-title"><hr class="fade-away"></div><ul class="slide-menu-items"><li class="slide-menu-item no-title past" data-item="0" data-slide-h="0" data-slide-v="0"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 0</span></li><li class="slide-menu-item active" data-item="1" data-slide-h="1" data-slide-v="0"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">‚òÄÔ∏è Part 10: Configuration</span></li><li class="slide-menu-item-vertical future" data-item="2" data-slide-h="1" data-slide-v="1"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Configuration settings</span></li><li class="slide-menu-item-vertical no-title future" data-item="3" data-slide-h="1" data-slide-v="2"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 3</span></li><li class="slide-menu-item-vertical future" data-item="4" data-slide-h="1" data-slide-v="3"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Question</span></li><li class="slide-menu-item-vertical future" data-item="5" data-slide-h="1" data-slide-v="4"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">cypress.json</span></li><li class="slide-menu-item-vertical no-title future" data-item="6" data-slide-h="1" data-slide-v="5"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 6</span></li><li class="slide-menu-item-vertical future" data-item="7" data-slide-h="1" data-slide-v="6"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">cypress.json IntelliSense</span></li><li class="slide-menu-item-vertical future" data-item="8" data-slide-h="1" data-slide-v="7"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">VSCode</span></li><li class="slide-menu-item-vertical future" data-item="9" data-slide-h="1" data-slide-v="8"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">VSCode (alternative)</span></li><li class="slide-menu-item-vertical future" data-item="10" data-slide-h="1" data-slide-v="9"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">command line arguments</span></li><li class="slide-menu-item-vertical future" data-item="11" data-slide-h="1" data-slide-v="10"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">package scripts</span></li><li class="slide-menu-item-vertical future" data-item="12" data-slide-h="1" data-slide-v="11"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">environment variables</span></li><li class="slide-menu-item-vertical future" data-item="13" data-slide-h="1" data-slide-v="12"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">environment variables</span></li><li class="slide-menu-item-vertical future" data-item="14" data-slide-h="1" data-slide-v="13"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">plugin code</span></li><li class="slide-menu-item-vertical future" data-item="15" data-slide-h="1" data-slide-v="14"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">plugin code</span></li><li class="slide-menu-item-vertical future" data-item="16" data-slide-h="1" data-slide-v="15"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Run-time configuration</span></li><li class="slide-menu-item-vertical future" data-item="17" data-slide-h="1" data-slide-v="16"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Resolved configuration</span></li><li class="slide-menu-item-vertical future" data-item="18" data-slide-h="1" data-slide-v="17"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Configuration precedence</span></li><li class="slide-menu-item-vertical future" data-item="19" data-slide-h="1" data-slide-v="18"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Todo</span></li><li class="slide-menu-item-vertical future" data-item="20" data-slide-h="1" data-slide-v="19"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Environment variables</span></li><li class="slide-menu-item-vertical future" data-item="21" data-slide-h="1" data-slide-v="20"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Environment variables</span></li><li class="slide-menu-item-vertical future" data-item="22" data-slide-h="1" data-slide-v="21"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Environment variables</span></li><li class="slide-menu-item-vertical future" data-item="23" data-slide-h="1" data-slide-v="22"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Using env variables</span></li><li class="slide-menu-item-vertical future" data-item="24" data-slide-h="1" data-slide-v="23"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Todo: get deep property</span></li><li class="slide-menu-item-vertical future" data-item="25" data-slide-h="1" data-slide-v="24"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Environment variables</span></li><li class="slide-menu-item-vertical no-title future" data-item="26" data-slide-h="1" data-slide-v="25"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 26</span></li><li class="slide-menu-item-vertical future" data-item="27" data-slide-h="1" data-slide-v="26"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Todo</span></li><li class="slide-menu-item-vertical future" data-item="28" data-slide-h="1" data-slide-v="27"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Environment variables</span></li><li class="slide-menu-item-vertical no-title future" data-item="29" data-slide-h="1" data-slide-v="28"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Slide 29</span></li><li class="slide-menu-item-vertical future" data-item="30" data-slide-h="1" data-slide-v="29"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Environment variables</span></li><li class="slide-menu-item-vertical future" data-item="31" data-slide-h="1" data-slide-v="30"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Environment variables</span></li><li class="slide-menu-item-vertical future" data-item="32" data-slide-h="1" data-slide-v="31"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Environment variables</span></li><li class="slide-menu-item-vertical future" data-item="33" data-slide-h="1" data-slide-v="32"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Todo: per-environment config</span></li><li class="slide-menu-item-vertical future" data-item="34" data-slide-h="1" data-slide-v="33"><i class="fa fa-check-circle past"></i><i class="fa fa-dot-circle-o active"></i><i class="fa fa-circle-thin future"></i><span class="slide-menu-item-title">Summary</span></li></ul></div></nav><div class="slide-menu-overlay"></div></div>
    
    
    <script src="./Configuration_files/reveal.js"></script>
    <script src="./Configuration_files/jquery.min.js"></script>
    
    
    

    <script>
        Reveal.initialize({
            
            controls: true,
            
            controlsLayout: 'bottom-right',
            progress: true,
            embedded: true,
            margin: 0.0,
            
            
            showNotes: false,
            transition: 'none',
            backgroundTransition: 'none',
            autoSlide: 0,
            loop: false,
            center: true,
            rtl: false,
            shuffle: false,
            mouseWheel: false,
            
            controlsTutorial: true,
            
            
            
              slideNumber: 'c/t', // slideNumber: false,
            
            history: true,
            
            
            menu: {
              custom: [],
              path : "/assets/libs/slides/plugin/menu",
              themes : false,
              transitions:  false,
              markers: true,
              sticky: true,
              autoOpen: true
            },
            
            
            dependencies: [
                { src: "/assets/libs/slides/plugin/markdown/marked.js",
                  condition: function() {
                    return !!document.querySelector( '[data-markdown]' );
                  }},
                { src: "/assets/libs/slides/plugin/markdown/markdown.js",
                condition: function() {
                  return !!document.querySelector( '[data-markdown]' );
                }},
                
                { src:"/assets/libs/slides/plugin/menu/menu.js",
                  async: true},
                
                
                
                
                { src: '/assets/libs/highlight.js/9.15.8/highlight.js', async: true },
                
                { src: '/assets/libs/highlight.js/9.15.8/reveal-code-focus-30.js',
                  async: true,
                  callback: function() {
                    RevealCodeFocus();
                  }
                },
                
                
                
                
                
            ]
        });

        Reveal.addEventListener('ready', function(evt) {

          if(typeof twtter !== "undefined") {
              twttr.widgets.load();
          }

          upgradeAnchors();
          pushFootnoteNotification();

          // Force refresh to workaround Reveal.js 3.8.0
          // first render problem re. scrollHeight calc
          // for slides with non-text (image) content.
          setTimeout(Reveal.layout, 500);
        });

        
        Reveal.addEventListener('menu-ready', function(evt) {
            toggleMenuOff();
        });
        

        Reveal.addEventListener('slidechanged', function(evt) {
          /*
          if (evt.indexh === 0 && evt.indexv === 0) {
            pushHelpNotification();
          } else {
            pushFootnoteNotification();
          }
          */
          pushFootnoteNotification();
        });

        Reveal.configure({
            keyboard: {
                88: function() { // bind "x" key to "select" code block content

                    var currentSlide = Reveal.getCurrentSlide();
                    var preBlock = $(currentSlide).find("pre");

                    if(preBlock.length > 0) {

                        if (window.getSelection) {
                            var range = document.createRange();
                            range.selectNodeContents(preBlock[0]);
                            var selection = window.getSelection();
                            selection.removeAllRanges();
                            selection.addRange(range);
                        }
                    }
                }
            }
        });

        function goHome() {
            window.location.href = "https://gitpitch.com";
        }

        function enterFullscreen() {
            Reveal.triggerKey(70);
        };

        function enterOverview() {
            Reveal.toggleOverview();
        };

        function enterBlackout() {
            Reveal.togglePause();
        };

        function toggleHelp() {
          Reveal.toggleHelp();
        }

        function enableEvents() {
            Reveal.addEventListeners();
        };

        function disableEvents() {
            Reveal.removeEventListeners();
        };

        function toggleMenuOff() {
            if(RevealMenu && RevealMenu.isOpen()) {
                RevealMenu.toggle();
            }
        }

        function toggleMenu() {
            if(RevealMenu) {
                RevealMenu.toggle();
            }
        }

        function upgradeAnchors() {
            Array.from(document.getElementsByTagName('a')).forEach($link => {
              if ($link.hostname !== window.location.hostname) {
                $link.setAttribute('rel', 'noopener noreferrer');
                $link.setAttribute('target', '_blank');
              }
            });
        }

    </script>

    

    

<script>
    function pushNotification(msg, fade) {
      var footer = document.getElementById('title-footer')
      var notification = document.getElementById('notification')
      if(window.innerWidth < 700) {
        footer.className = "footer-hidden";
      } else {
          footer.className = "footer-visible";
          if(fade) {
            notification.className = "footer-fade";
            notification.innerHTML = msg;
          } else {
            notification.className = "footer-hard";
            notification.innerHTML = msg;
          }
      }
    };

    function pushHelpNotification() {
      if(window.innerWidth < 700)
        pushNotification("<a href='#' onclick='RevealMenu.toggle()'>Menu</a> | <a href='#' onclick='enterFullscreen()'>Fullscreen</a> | <a href='#' onclick='enterOverview()'>Overview</a> | <a href='#' onclick='enterBlackout()'>Blackout</a> | <a href='#' onclick='RevealNotes.open()'>Speaker</a> | <a href='#' onclick='enterHelp()'>Help</a>");
      else
        pushNotification("Navigate : Space / Arrow Keys | <a href='#' onclick='RevealMenu.toggle()'>M</a> - Menu | <a href='#' onclick='enterFullscreen()'>F</a> - Fullscreen | <a href='#' onclick='enterOverview()'>O</a> - Overview | <a href='#' onclick='enterBlackout()'>B</a> - Blackout | <a href='#' onclick='RevealNotes.open()'>S</a> - Speaker | <a href='#' onclick='enterHelp()'>?</a> - Help");
    }

    function pushFootnoteNotification() {
      
        pushNotification(" ", true);
      
    }

    function pushCodePresentingStepNotification(step, frags) {
      // pushNotification("Code Presenting - Step " + step + " / " + frags, true);
    }
</script>





</body></html>